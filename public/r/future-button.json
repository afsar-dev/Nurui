{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "future-button",
  "type": "registry:component",
  "dependencies": [
    "class-variance-authority",
    "clsx",
    "lucide-react",
    "tailwind-merge"
  ],
  "devDependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "./src/components/nurui/future-button-demo.tsx",
      "content": "\"use client\";\r\nimport { ShoppingCart } from \"lucide-react\";\r\nimport FutureButton from \"./future-button\";\r\n\r\nexport default function FutureButtonDemo() {\r\n  return (\r\n    <div className=\"flex justify-center py-20\">\r\n      <FutureButton>\r\n        <ShoppingCart className=\"w-4 h-4 mr-2\" />\r\n        Purchase Item\r\n      </FutureButton>\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:component"
    },
    {
      "path": "./src/components/nurui/future-button.tsx",
      "content": "import { Frame } from \"@/components/nurui/frame\";\r\nimport { twMerge } from \"tailwind-merge\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\n\r\n// ðŸŽ¨ Theme colors â€” no CSS variables, pure hex/rgba\r\nconst COLORS = {\r\n  default: {\r\n    stroke1: \"#4f46e5\",\r\n    fill1: \"rgba(79,70,229,0.22)\",\r\n    stroke2: \"#4f46e5\",\r\n    fill2: \"rgba(79,70,229,0.1)\",\r\n    text: \"#ffffff\",\r\n  },\r\n  accent: {\r\n    stroke1: \"#f97316\",\r\n    fill1: \"rgba(249,115,22,0.4)\",\r\n    stroke2: \"#f97316\",\r\n    fill2: \"rgba(249,115,22,0.2)\",\r\n    text: \"#ffffff\",\r\n  },\r\n  destructive: {\r\n    stroke1: \"#dc2626\",\r\n    fill1: \"rgba(220,38,38,0.22)\",\r\n    stroke2: \"#dc2626\",\r\n    fill2: \"rgba(220,38,38,0.1)\",\r\n    text: \"#ffffff\",\r\n  },\r\n  secondary: {\r\n    stroke1: \"#64748b\",\r\n    fill1: \"rgba(100,116,139,0.15)\",\r\n    stroke2: \"#64748b\",\r\n    fill2: \"rgba(100,116,139,0.1)\",\r\n    text: \"#ffffff\",\r\n  },\r\n  success: {\r\n    stroke1: \"#16a34a\",\r\n    fill1: \"rgba(22,163,74,0.22)\",\r\n    stroke2: \"#16a34a\",\r\n    fill2: \"rgba(22,163,74,0.1)\",\r\n    text: \"#ffffff\",\r\n  },\r\n};\r\n\r\nconst buttonVariants = cva(\r\n  \"group font-bold mb-2 relative px-8 py-2 cursor-pointer transition-all outline-none [&>span]:relative [&>span]:flex [&>span]:items-center [&>span]:justify-center\",\r\n  {\r\n    variants: {\r\n      shape: {\r\n        default: \"\",\r\n        flat: \"\",\r\n        simple: \"ps-8 pe-6\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      shape: \"default\",\r\n    },\r\n  },\r\n);\r\n\r\nfunction FutureButton({\r\n  className,\r\n  children,\r\n  shape = \"default\",\r\n  enableBackdropBlur = false,\r\n  enableViewBox = false,\r\n  customPaths,\r\n  textColor,\r\n  ...props\r\n}: React.ComponentProps<\"button\"> &\r\n  VariantProps<typeof buttonVariants> & {\r\n    customPaths?: string[];\r\n    enableBackdropBlur?: boolean;\r\n    enableViewBox?: boolean;\r\n    bgColor?: string;\r\n    textColor?: string;\r\n  }) {\r\n  const colors = COLORS.default;\r\n\r\n  return (\r\n    <button\r\n      {...props}\r\n      style={{\r\n        color: textColor || colors.text,\r\n      }}\r\n      className={twMerge(buttonVariants({ shape, className }))}\r\n    >\r\n      <div className=\"absolute inset-0 -mb-2\">\r\n        {!customPaths && (shape === \"default\" || shape === \"flat\") && (\r\n          <Frame\r\n            enableBackdropBlur={enableBackdropBlur}\r\n            enableViewBox={enableViewBox}\r\n            paths={[\r\n              {\r\n                show: true,\r\n                style: {\r\n                  strokeWidth: \"1\",\r\n                  stroke: colors.stroke1,\r\n                  fill: colors.fill1,\r\n                },\r\n                path: [\r\n                  [\"M\", \"17\", \"0\"],\r\n                  [\"L\", \"100% - 7\", \"0\"],\r\n                  [\"L\", \"100% + 0\", \"0% + 9.5\"],\r\n                  [\"L\", \"100% - 18\", \"100% - 6\"],\r\n                  [\"L\", \"4\", \"100% - 6\"],\r\n                  [\"L\", \"0\", \"100% - 15\"],\r\n                  [\"L\", \"17\", \"0\"],\r\n                ],\r\n              },\r\n              {\r\n                show: true,\r\n                style: {\r\n                  strokeWidth: \"1\",\r\n                  stroke: colors.stroke2,\r\n                  fill: colors.fill2,\r\n                },\r\n                path: [\r\n                  [\"M\", \"9\", \"100% - 6\"],\r\n                  [\"L\", \"100% - 22\", \"100% - 6\"],\r\n                  [\"L\", \"100% - 25\", \"100% + 0\"],\r\n                  [\"L\", \"12\", \"100% + 0\"],\r\n                  [\"L\", \"9\", \"100% - 6\"],\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        )}\r\n\r\n        {!customPaths && shape === \"simple\" && (\r\n          <Frame\r\n            enableBackdropBlur={enableBackdropBlur}\r\n            enableViewBox={enableViewBox}\r\n            paths={[\r\n              {\r\n                show: true,\r\n                style: {\r\n                  strokeWidth: \"1\",\r\n                  stroke: colors.stroke1,\r\n                  fill: colors.fill1,\r\n                },\r\n                path: [\r\n                  [\"M\", \"17\", \"0\"],\r\n                  [\"L\", \"100% - 0\", \"0\"],\r\n                  [\"L\", \"100% - 0\", \"100% - 6\"],\r\n                  [\"L\", \"0% + 3\", \"100% - 6\"],\r\n                  [\"L\", \"0% - 0\", \"100% - 16\"],\r\n                  [\"L\", \"17\", \"0\"],\r\n                ],\r\n              },\r\n              {\r\n                show: true,\r\n                style: {\r\n                  strokeWidth: \"1\",\r\n                  stroke: colors.stroke2,\r\n                  fill: colors.fill2,\r\n                },\r\n                path: [\r\n                  [\"M\", \"8\", \"100% - 6\"],\r\n                  [\"L\", \"100% - 5\", \"100% - 6\"],\r\n                  [\"L\", \"100% - 7\", \"100% - 0\"],\r\n                  [\"L\", \"10\", \"100% - 0\"],\r\n                  [\"L\", \"8\", \"100% - 6\"],\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        )}\r\n\r\n        {customPaths?.map((customPath, i) => (\r\n          <Frame key={i} paths={JSON.parse(customPath)} />\r\n        ))}\r\n      </div>\r\n      <span>{children}</span>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default FutureButton;\r\n",
      "type": "registry:component"
    },
    {
      "path": "./src/components/nurui/frame.tsx",
      "content": "import { useRef, useEffect } from \"react\";\r\nimport { twMerge } from \"tailwind-merge\";\r\nimport { type Paths, setupSvgRenderer } from \"@left4code/svg-renderer\";\r\n\r\nfunction Frame({\r\n  className,\r\n  paths,\r\n  enableBackdropBlur,\r\n  enableViewBox,\r\n  ...props\r\n}: {\r\n  paths: Paths;\r\n  enableBackdropBlur?: boolean;\r\n  enableViewBox?: boolean;\r\n} & React.ComponentProps<\"svg\">) {\r\n  const svgRef = useRef<SVGSVGElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (svgRef.current && svgRef.current.parentElement) {\r\n      const instance = setupSvgRenderer({\r\n        el: svgRef.current,\r\n        paths,\r\n        enableBackdropBlur,\r\n        enableViewBox,\r\n      });\r\n\r\n      return () => instance.destroy();\r\n    }\r\n  }, [paths, enableViewBox, enableBackdropBlur]);\r\n\r\n  return (\r\n    <svg\r\n      {...props}\r\n      className={twMerge([\"absolute inset-0 size-full\", className])}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      ref={svgRef}\r\n    />\r\n  );\r\n}\r\n\r\nexport { Frame };\r\n",
      "type": "registry:component"
    }
  ]
}