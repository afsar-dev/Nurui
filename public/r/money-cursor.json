{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "money-cursor",
  "type": "registry:component",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "./src/components/nurui/money-cursor-demo.tsx",
      "content": "import MoneyCursor from \"@/components/nurui/money-cursor\";\r\n\r\nconst MoneyCursorDemo = () => {\r\n  return (\r\n    <>\r\n      <p className=\"text-3xl text-center pt-4 text-[#3ca2fa] font-bold\">\r\n        Move cursor to see the effect.\r\n      </p>\r\n      <MoneyCursor />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoneyCursorDemo;\r\n",
      "type": "registry:component"
    },
    {
      "path": "./src/components/nurui/money-cursor.tsx",
      "content": "\"use client\";\r\nimport React, { useEffect, useRef } from \"react\";\r\n\r\nconst symbols = [\"$\", \"ðŸ’¸\", \"ðŸª™\", \"ðŸ’µ\"];\r\n\r\nclass MoneyParticle {\r\n  x: number;\r\n  y: number;\r\n  alpha: number;\r\n  char: string;\r\n\r\n  constructor(x: number, y: number) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.alpha = 1;\r\n    this.char = symbols[Math.floor(Math.random() * symbols.length)];\r\n  }\r\n\r\n  update() {\r\n    this.y -= 0.3;\r\n    this.alpha -= 0.02;\r\n  }\r\n\r\n  draw(ctx: CanvasRenderingContext2D) {\r\n    ctx.fillStyle = `rgba(255, 255, 0, ${this.alpha})`;\r\n    ctx.font = \"18px sans-serif\";\r\n    ctx.fillText(this.char, this.x, this.y);\r\n  }\r\n}\r\n\r\nconst MoneyCursor: React.FC = () => {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const particlesRef = useRef<MoneyParticle[]>([]);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    if (!ctx) return;\r\n\r\n    canvas.width = window.innerWidth;\r\n    canvas.height = window.innerHeight;\r\n\r\n    const particles = particlesRef.current;\r\n\r\n    const animate = () => {\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      for (let i = particles.length - 1; i >= 0; i--) {\r\n        const p = particles[i];\r\n        p.update();\r\n        p.draw(ctx);\r\n        if (p.alpha <= 0) particles.splice(i, 1);\r\n      }\r\n      requestAnimationFrame(animate);\r\n    };\r\n\r\n    animate();\r\n\r\n    const handleMove = (e: MouseEvent) => {\r\n      for (let i = 0; i < 2; i++) {\r\n        particles.push(new MoneyParticle(e.clientX, e.clientY));\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"mousemove\", handleMove);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"mousemove\", handleMove);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      className=\"fixed top-0 left-0 w-full h-full pointer-events-none z-50\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default MoneyCursor;",
      "type": "registry:component"
    }
  ]
}