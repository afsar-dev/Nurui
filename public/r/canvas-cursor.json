{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "canvas-cursor",
  "type": "registry:component",
  "dependencies": [
    ""
  ],
  "devDependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "./src/components/nurui/canvas-cursor-demo.tsx",
      "content": "import React from \"react\";\r\nimport CanvasCursor from \"@/components/nurui/canvas-cursor\";\r\n\r\nconst CanvasCursorDemo = () => {\r\n  return (\r\n    <>\r\n      <p className=\"text-3xl text-center pt-4 text-[#3ca2fa] font-bold\">\r\n        Move cursor to see the effect.\r\n      </p>\r\n      <CanvasCursor />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CanvasCursorDemo;\r\n",
      "type": "registry:component"
    },
    {
      "path": "./src/components/nurui/canvas-cursor.tsx",
      "content": "/* eslint-disable no-var */\r\n/* eslint-disable @typescript-eslint/no-unused-expressions */\r\n/* eslint-disable @typescript-eslint/ban-ts-comment */\r\n// @ts-nocheck\r\n\"use client\";\r\n\r\n// this is a client component\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function CanvasCursor() {\r\n  useEffect(() => {\r\n    renderCanvas();\r\n  }, []);\r\n  return (\r\n    <canvas\r\n      className=\"fixed top-0 left-0 w-full h-full pointer-events-none z-50\"\r\n      id=\"canvas\"\r\n    ></canvas>\r\n  );\r\n}\r\n\r\nfunction n(e) {\r\n  // @ts-ignore\r\n  this.init(e || {});\r\n}\r\nn.prototype = {\r\n  // @ts-ignore\r\n  init: function (e) {\r\n    // @ts-ignore\r\n    this.phase = e.phase || 0;\r\n    // @ts-ignore\r\n    this.offset = e.offset || 0;\r\n    // @ts-ignore\r\n    this.frequency = e.frequency || 0.001;\r\n    // @ts-ignore\r\n    this.amplitude = e.amplitude || 1;\r\n  },\r\n  update: function () {\r\n    return (\r\n      // @ts-ignore\r\n      (\r\n        (this.phase += this.frequency),\r\n        // @ts-ignore\r\n        (e = this.offset + Math.sin(this.phase) * this.amplitude)\r\n      )\r\n    );\r\n  },\r\n  value: function () {\r\n    return e;\r\n  },\r\n};\r\n\r\n// @ts-ignore\r\nfunction Line(e) {\r\n  // @ts-ignore\r\n  this.init(e || {});\r\n}\r\n\r\nLine.prototype = {\r\n  // @ts-ignore\r\n  init: function (e) {\r\n    // @ts-ignore\r\n    this.spring = e.spring + 0.1 * Math.random() - 0.05;\r\n    // @ts-ignore\r\n    this.friction = E.friction + 0.01 * Math.random() - 0.005;\r\n    // @ts-ignore\r\n    this.nodes = [];\r\n    for (var t, n = 0; n < E.size; n++) {\r\n      t = new Node();\r\n      // @ts-ignore\r\n      t.x = pos.x;\r\n      // @ts-ignore\r\n      t.y = pos.y;\r\n      // @ts-ignore\r\n      this.nodes.push(t);\r\n    }\r\n  },\r\n  update: function () {\r\n    // @ts-ignore\r\n    let e = this.spring,\r\n      // @ts-ignore\r\n      t = this.nodes[0];\r\n    // @ts-ignore\r\n    t.vx += (pos.x - t.x) * e;\r\n    // @ts-ignore\r\n    t.vy += (pos.y - t.y) * e;\r\n    // @ts-ignore\r\n    for (var n, i = 0, a = this.nodes.length; i < a; i++)\r\n      // @ts-ignore\r\n      ((t = this.nodes[i]),\r\n        0 < i &&\r\n          // @ts-ignore\r\n          ((n = this.nodes[i - 1]),\r\n          (t.vx += (n.x - t.x) * e),\r\n          (t.vy += (n.y - t.y) * e),\r\n          (t.vx += n.vx * E.dampening),\r\n          (t.vy += n.vy * E.dampening)),\r\n        // @ts-ignore\r\n        (t.vx *= this.friction),\r\n        // @ts-ignore\r\n        (t.vy *= this.friction),\r\n        (t.x += t.vx),\r\n        (t.y += t.vy),\r\n        (e *= E.tension));\r\n  },\r\n  draw: function () {\r\n    let e,\r\n      t,\r\n      // @ts-ignore\r\n      n = this.nodes[0].x,\r\n      // @ts-ignore\r\n      i = this.nodes[0].y;\r\n    // @ts-ignore\r\n    ctx.beginPath();\r\n    // @ts-ignore\r\n    ctx.moveTo(n, i);\r\n    // @ts-ignore\r\n    for (var a = 1, o = this.nodes.length - 2; a < o; a++) {\r\n      // @ts-ignore\r\n      e = this.nodes[a];\r\n      // @ts-ignore\r\n      t = this.nodes[a + 1];\r\n      n = 0.5 * (e.x + t.x);\r\n      i = 0.5 * (e.y + t.y);\r\n      // @ts-ignore\r\n      ctx.quadraticCurveTo(e.x, e.y, n, i);\r\n    }\r\n    // @ts-ignore\r\n    e = this.nodes[a];\r\n    // @ts-ignore\r\n    t = this.nodes[a + 1];\r\n    // @ts-ignore\r\n    ctx.quadraticCurveTo(e.x, e.y, t.x, t.y);\r\n    // @ts-ignore\r\n    ctx.stroke();\r\n    // @ts-ignore\r\n    ctx.closePath();\r\n  },\r\n};\r\n\r\n// @ts-ignore\r\nfunction onMousemove(e) {\r\n  function o() {\r\n    lines = [];\r\n    for (let e = 0; e < E.trails; e++)\r\n      lines.push(new Line({ spring: 0.45 + (e / E.trails) * 0.025 }));\r\n  }\r\n  // @ts-ignore\r\n  function c(e) {\r\n    (e.touches\r\n      ? // @ts-ignore\r\n        ((pos.x = e.touches[0].pageX), (pos.y = e.touches[0].pageY))\r\n      : // @ts-ignore\r\n        ((pos.x = e.clientX), (pos.y = e.clientY)),\r\n      e.preventDefault());\r\n  }\r\n  // @ts-ignore\r\n  function l(e) {\r\n    // @ts-ignore\r\n    1 == e.touches.length &&\r\n      ((pos.x = e.touches[0].pageX), (pos.y = e.touches[0].pageY));\r\n  }\r\n  (document.removeEventListener(\"mousemove\", onMousemove),\r\n    document.removeEventListener(\"touchstart\", onMousemove),\r\n    document.addEventListener(\"mousemove\", c),\r\n    document.addEventListener(\"touchmove\", c),\r\n    document.addEventListener(\"touchstart\", l),\r\n    c(e),\r\n    o(),\r\n    render());\r\n}\r\n\r\nfunction render() {\r\n  // @ts-ignore\r\n  if (ctx.running) {\r\n    // @ts-ignore\r\n    ctx.globalCompositeOperation = \"source-over\";\r\n    // @ts-ignore\r\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n    // @ts-ignore\r\n    ctx.globalCompositeOperation = \"lighter\";\r\n    // @ts-ignore\r\n    ctx.strokeStyle = \"hsla(\" + Math.round(f.update()) + \",100%,50%,0.025)\";\r\n    // @ts-ignore\r\n    ctx.lineWidth = 10;\r\n    for (var e, t = 0; t < E.trails; t++) {\r\n      // @ts-ignore\r\n      (e = lines[t]).update();\r\n      e.draw();\r\n    }\r\n    // @ts-ignore\r\n    ctx.frame++;\r\n    window.requestAnimationFrame(render);\r\n  }\r\n}\r\n\r\nfunction resizeCanvas() {\r\n  // @ts-ignore\r\n  ctx.canvas.width = window.innerWidth - 20;\r\n  // @ts-ignore\r\n  ctx.canvas.height = window.innerHeight;\r\n}\r\n\r\n// @ts-ignore\r\nvar ctx,\r\n  // @ts-ignore\r\n  f,\r\n  e = 0,\r\n  pos = {},\r\n  // @ts-ignore\r\n  lines = [],\r\n  E = {\r\n    debug: true,\r\n    friction: 0.5,\r\n    trails: 80,\r\n    size: 50,\r\n    dampening: 0.025,\r\n    tension: 0.99,\r\n  };\r\nfunction Node() {\r\n  this.x = 0;\r\n  this.y = 0;\r\n  this.vy = 0;\r\n  this.vx = 0;\r\n}\r\n\r\nexport const renderCanvas = function () {\r\n  // @ts-ignore\r\n  ctx = document.getElementById(\"canvas\").getContext(\"2d\");\r\n  ctx.running = true;\r\n  ctx.frame = 1;\r\n  f = new n({\r\n    phase: Math.random() * 2 * Math.PI,\r\n    amplitude: 85,\r\n    frequency: 0.0015,\r\n    offset: 285,\r\n  });\r\n  document.addEventListener(\"mousemove\", onMousemove);\r\n  document.addEventListener(\"touchstart\", onMousemove);\r\n  document.body.addEventListener(\"orientationchange\", resizeCanvas);\r\n  window.addEventListener(\"resize\", resizeCanvas);\r\n  window.addEventListener(\"focus\", () => {\r\n    // @ts-ignore\r\n    if (!ctx.running) {\r\n      // @ts-ignore\r\n      ctx.running = true;\r\n      render();\r\n    }\r\n  });\r\n  window.addEventListener(\"blur\", () => {\r\n    // @ts-ignore\r\n    ctx.running = true;\r\n  });\r\n  resizeCanvas();\r\n};\r\n",
      "type": "registry:component"
    }
  ]
}