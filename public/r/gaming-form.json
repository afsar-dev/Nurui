{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "gaming-form",
  "type": "registry:component",
  "dependencies": [
    "lucide-react"
  ],
  "devDependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "./src/components/nurui/gaming-form-demo.tsx",
      "content": "\"use client\";\nimport LoginPage from \"@/components/nurui/gaming-form\";\n\nfunction GamingFormDemo() {\n  const handleLogin = (email: string, password: string, remember: boolean) => {\n    console.log(\"Login attempt:\", { email, password, remember });\n  };\n\n  return (\n    <div className=\"relative min-h-screen w-full flex items-center justify-center px-4 py-12\">\n      <LoginPage.VideoBackground videoUrl=\"https://videos.pexels.com/video-files/8128311/8128311-uhd_2560_1440_25fps.mp4\" />\n\n      <div className=\"relative z-20 w-full max-w-md animate-fadeIn\">\n        <LoginPage.LoginForm onSubmit={handleLogin} />\n      </div>\n\n      <footer className=\"absolute bottom-4 left-0 right-0 text-center text-white/60 text-sm z-20\">\n        ¬© 2025 NexusGate. All rights reserved.\n      </footer>\n    </div>\n  );\n}\n\nexport default GamingFormDemo;\n",
      "type": "registry:component"
    },
    {
      "path": "./src/components/nurui/gaming-form.tsx",
      "content": "\"use client\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport {\n  Eye,\n  EyeOff,\n  Mail,\n  Lock,\n  Chrome,\n  Twitter,\n  Gamepad2,\n} from \"lucide-react\";\n\ninterface LoginFormProps {\n  onSubmit: (email: string, password: string, remember: boolean) => void;\n}\n\ninterface VideoBackgroundProps {\n  videoUrl: string;\n}\n\ninterface FormInputProps {\n  icon: React.ReactNode;\n  type: string;\n  placeholder: string;\n  value: string;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  required?: boolean;\n}\n\ninterface SocialButtonProps {\n  icon: React.ReactNode;\n  name: string;\n}\n\ninterface ToggleSwitchProps {\n  checked: boolean;\n  onChange: () => void;\n  id: string;\n}\n\n// FormInput Component\nconst FormInput: React.FC<FormInputProps> = ({\n  icon,\n  type,\n  placeholder,\n  value,\n  onChange,\n  required,\n}) => {\n  return (\n    <div className=\"relative\">\n      <div className=\"absolute left-3 top-1/2 -translate-y-1/2\">{icon}</div>\n      <input\n        type={type}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        required={required}\n        className=\"w-full pl-10 pr-3 py-2 bg-white/5 border border-white/10 rounded-lg text-white placeholder-white/60 focus:outline-none focus:border-purple-500/50 transition-colors\"\n      />\n    </div>\n  );\n};\n\n// SocialButton Component\nconst SocialButton: React.FC<SocialButtonProps> = ({ icon }) => {\n  return (\n    <button className=\"flex items-center justify-center p-2 bg-white/5 border border-white/10 rounded-lg text-white/80 hover:bg-white/10 hover:text-white transition-colors\">\n      {icon}\n    </button>\n  );\n};\n\n// ToggleSwitch Component\nconst ToggleSwitch: React.FC<ToggleSwitchProps> = ({\n  checked,\n  onChange,\n  id,\n}) => {\n  return (\n    <div className=\"relative inline-block w-10 h-5 cursor-pointer\">\n      <input\n        type=\"checkbox\"\n        id={id}\n        className=\"sr-only\"\n        checked={checked}\n        onChange={onChange}\n      />\n      <div\n        className={`absolute inset-0 rounded-full transition-colors duration-200 ease-in-out ${checked ? \"bg-purple-600\" : \"bg-white/20\"}`}\n      >\n        <div\n          className={`absolute left-0.5 top-0.5 w-4 h-4 rounded-full bg-white transition-transform duration-200 ease-in-out ${checked ? \"transform translate-x-5\" : \"\"}`}\n        />\n      </div>\n    </div>\n  );\n};\n\n// VideoBackground Component\nconst VideoBackground: React.FC<VideoBackgroundProps> = ({ videoUrl }) => {\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.play().catch((error) => {\n        console.error(\"Video autoplay failed:\", error);\n      });\n    }\n  }, []);\n\n  return (\n    <div className=\"absolute inset-0 w-full h-full rounded-2xl overflow-hidden\">\n      <div className=\"absolute inset-0 bg-black/30 z-10\" />\n      <video\n        ref={videoRef}\n        className=\"absolute inset-0 min-w-full min-h-full object-cover w-auto h-auto\"\n        autoPlay\n        loop\n        muted\n        playsInline\n      >\n        <source src={videoUrl} type=\"video/mp4\" />\n        Your browser does not support the video tag.\n      </video>\n    </div>\n  );\n};\n\n// Main LoginForm Component\nconst LoginForm: React.FC<LoginFormProps> = ({ onSubmit }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [remember, setRemember] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n\n    await new Promise((resolve) => setTimeout(resolve, 1000));\n    setIsSuccess(true);\n    await new Promise((resolve) => setTimeout(resolve, 500));\n\n    onSubmit(email, password, remember);\n    setIsSubmitting(false);\n    setIsSuccess(false);\n  };\n\n  return (\n    <div className=\"p-8 rounded-2xl backdrop-blur-sm bg-black/50 border border-white/10\">\n      <div className=\"mb-8 text-center\">\n        <h2 className=\"text-3xl font-bold mb-2 relative group\">\n          <span className=\"absolute -inset-1 bg-gradient-to-r from-purple-600/30 via-pink-500/30 to-blue-500/30 blur-xl opacity-75 group-hover:opacity-100 transition-all duration-500 animate-pulse\"></span>\n          <span className=\"relative inline-block text-3xl font-bold mb-2 text-white\">\n            NexusGate\n          </span>\n          <span className=\"absolute -inset-0.5 bg-gradient-to-r from-purple-500/20 to-pink-500/20 blur-sm opacity-0 group-hover:opacity-100 transition-all duration-300\"></span>\n        </h2>\n        <div className=\"text-white/80 flex flex-col items-center space-y-1\">\n          <span className=\"relative group cursor-default\">\n            <span className=\"absolute -inset-1 bg-gradient-to-r from-purple-600/20 to-pink-600/20 blur-sm opacity-0 group-hover:opacity-100 transition-opacity duration-500\"></span>\n            <span className=\"relative inline-block animate-pulse\">\n              Your gaming universe awaits\n            </span>\n          </span>\n          <span className=\"text-xs text-white/50 animate-pulse\">\n            [Press Enter to join the adventure]\n          </span>\n          <div className=\"flex space-x-2 text-xs text-white/40\">\n            <span className=\"animate-pulse\">‚öîÔ∏è</span>\n            <span className=\"animate-bounce\">üéÆ</span>\n            <span className=\"animate-pulse\">üèÜ</span>\n          </div>\n        </div>\n      </div>\n\n      <form onSubmit={handleSubmit} className=\"space-y-6\">\n        <FormInput\n          icon={<Mail className=\"text-white/60\" size={18} />}\n          type=\"email\"\n          placeholder=\"Email address\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n        />\n\n        <div className=\"relative\">\n          <FormInput\n            icon={<Lock className=\"text-white/60\" size={18} />}\n            type={showPassword ? \"text\" : \"password\"}\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n          <button\n            type=\"button\"\n            className=\"absolute right-3 top-1/2 -translate-y-1/2 text-white/60 hover:text-white focus:outline-none transition-colors\"\n            onClick={() => setShowPassword(!showPassword)}\n            aria-label={showPassword ? \"Hide password\" : \"Show password\"}\n          >\n            {showPassword ? <EyeOff size={18} /> : <Eye size={18} />}\n          </button>\n        </div>\n\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-2\">\n            <div\n              onClick={() => setRemember(!remember)}\n              className=\"cursor-pointer\"\n            >\n              <ToggleSwitch\n                checked={remember}\n                onChange={() => setRemember(!remember)}\n                id=\"remember-me\"\n              />\n            </div>\n            <label\n              htmlFor=\"remember-me\"\n              className=\"text-sm text-white/80 cursor-pointer hover:text-white transition-colors\"\n              onClick={() => setRemember(!remember)}\n            >\n              Remember me\n            </label>\n          </div>\n          <a\n            href=\"#\"\n            className=\"text-sm text-white/80 hover:text-white transition-colors\"\n          >\n            Forgot password?\n          </a>\n        </div>\n\n        <button\n          type=\"submit\"\n          disabled={isSubmitting}\n          className={`w-full py-3 rounded-lg ${\n            isSuccess ? \"animate-success\" : \"bg-purple-600 hover:bg-purple-700\"\n          } text-white font-medium transition-all duration-200 ease-in-out transform hover:-translate-y-1 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-opacity-50 disabled:opacity-70 disabled:cursor-not-allowed disabled:transform-none shadow-lg shadow-purple-500/20 hover:shadow-purple-500/40`}\n        >\n          {isSubmitting ? \"Logging in...\" : \"Enter NexusGate\"}\n        </button>\n      </form>\n\n      <div className=\"mt-8\">\n        <div className=\"relative flex items-center justify-center\">\n          <div className=\"border-t border-white/10 absolute w-full\"></div>\n          <div className=\"bg-transparent px-4 relative text-white/60 text-sm\">\n            quick access via\n          </div>\n        </div>\n\n        <div className=\"mt-6 grid grid-cols-3 gap-3\">\n          <SocialButton icon={<Chrome size={18} />} name=\"Chrome\" />\n          <SocialButton icon={<Twitter size={18} />} name=\"X\" />\n          <SocialButton icon={<Gamepad2 size={18} />} name=\"Steam\" />\n        </div>\n      </div>\n\n      <div className=\"mt-8 text-center text-sm text-white/60\">\n        Don&#39;t have an account?{\" \"}\n        <a\n          href=\"#\"\n          className=\"font-medium text-white hover:text-purple-300 transition-colors\"\n        >\n          Create Account\n        </a>\n      </div>\n    </div>\n  );\n};\n\n// Export as default components\nconst LoginPage = {\n  LoginForm,\n  VideoBackground,\n};\n\nexport default LoginPage;\n",
      "type": "registry:component"
    }
  ]
}