{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "gaming-form",
  "type": "registry:component",
  "dependencies": [
    "lucide-react"
  ],
  "devDependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "./src/components/nurui/gaming-form-demo.tsx",
      "content": "\"use client\";\r\nimport LoginPage from \"@/components/nurui/gaming-form\";\r\n\r\nfunction GamingFormDemo() {\r\n  const handleLogin = (email: string, password: string, remember: boolean) => {\r\n    console.log(\"Login attempt:\", { email, password, remember });\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative min-h-screen w-full flex items-center justify-center px-4 py-12\">\r\n      <LoginPage.VideoBackground videoUrl=\"https://videos.pexels.com/video-files/8128311/8128311-uhd_2560_1440_25fps.mp4\" />\r\n\r\n      <div className=\"relative z-20 w-full max-w-md animate-fadeIn\">\r\n        <LoginPage.LoginForm onSubmit={handleLogin} />\r\n      </div>\r\n\r\n      <footer className=\"absolute bottom-4 left-0 right-0 text-center text-white/60 text-sm z-20\">\r\n        ¬© 2025 NexusGate. All rights reserved.\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GamingFormDemo;\r\n",
      "type": "registry:component"
    },
    {
      "path": "./src/components/nurui/gaming-form.tsx",
      "content": "\"use client\";\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport {\r\n  Eye,\r\n  EyeOff,\r\n  Mail,\r\n  Lock,\r\n  Chrome,\r\n  Twitter,\r\n  Gamepad2,\r\n} from \"lucide-react\";\r\n\r\ninterface LoginFormProps {\r\n  onSubmit: (email: string, password: string, remember: boolean) => void;\r\n}\r\n\r\ninterface VideoBackgroundProps {\r\n  videoUrl: string;\r\n}\r\n\r\ninterface FormInputProps {\r\n  icon: React.ReactNode;\r\n  type: string;\r\n  placeholder: string;\r\n  value: string;\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  required?: boolean;\r\n}\r\n\r\ninterface SocialButtonProps {\r\n  icon: React.ReactNode;\r\n  name: string;\r\n}\r\n\r\ninterface ToggleSwitchProps {\r\n  checked: boolean;\r\n  onChange: () => void;\r\n  id: string;\r\n}\r\n\r\n// FormInput Component\r\nconst FormInput: React.FC<FormInputProps> = ({\r\n  icon,\r\n  type,\r\n  placeholder,\r\n  value,\r\n  onChange,\r\n  required,\r\n}) => {\r\n  return (\r\n    <div className=\"relative\">\r\n      <div className=\"absolute left-3 top-1/2 -translate-y-1/2\">{icon}</div>\r\n      <input\r\n        type={type}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n        required={required}\r\n        className=\"w-full pl-10 pr-3 py-2 bg-white/5 border border-white/10 rounded-lg text-white placeholder-white/60 focus:outline-none focus:border-purple-500/50 transition-colors\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n// SocialButton Component\r\nconst SocialButton: React.FC<SocialButtonProps> = ({ icon }) => {\r\n  return (\r\n    <button className=\"flex items-center justify-center p-2 bg-white/5 border border-white/10 rounded-lg text-white/80 hover:bg-white/10 hover:text-white transition-colors\">\r\n      {icon}\r\n    </button>\r\n  );\r\n};\r\n\r\n// ToggleSwitch Component\r\nconst ToggleSwitch: React.FC<ToggleSwitchProps> = ({\r\n  checked,\r\n  onChange,\r\n  id,\r\n}) => {\r\n  return (\r\n    <div className=\"relative inline-block w-10 h-5 cursor-pointer\">\r\n      <input\r\n        type=\"checkbox\"\r\n        id={id}\r\n        className=\"sr-only\"\r\n        checked={checked}\r\n        onChange={onChange}\r\n      />\r\n      <div\r\n        className={`absolute inset-0 rounded-full transition-colors duration-200 ease-in-out ${checked ? \"bg-purple-600\" : \"bg-white/20\"}`}\r\n      >\r\n        <div\r\n          className={`absolute left-0.5 top-0.5 w-4 h-4 rounded-full bg-white transition-transform duration-200 ease-in-out ${checked ? \"transform translate-x-5\" : \"\"}`}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// VideoBackground Component\r\nconst VideoBackground: React.FC<VideoBackgroundProps> = ({ videoUrl }) => {\r\n  const videoRef = useRef<HTMLVideoElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (videoRef.current) {\r\n      videoRef.current.play().catch((error) => {\r\n        console.error(\"Video autoplay failed:\", error);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"absolute inset-0 w-full h-full rounded-2xl overflow-hidden\">\r\n      <div className=\"absolute inset-0 bg-black/30 z-10\" />\r\n      <video\r\n        ref={videoRef}\r\n        className=\"absolute inset-0 min-w-full min-h-full object-cover w-auto h-auto\"\r\n        autoPlay\r\n        loop\r\n        muted\r\n        playsInline\r\n      >\r\n        <source src={videoUrl} type=\"video/mp4\" />\r\n        Your browser does not support the video tag.\r\n      </video>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Main LoginForm Component\r\nconst LoginForm: React.FC<LoginFormProps> = ({ onSubmit }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [remember, setRemember] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [isSuccess, setIsSuccess] = useState(false);\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n\r\n    await new Promise((resolve) => setTimeout(resolve, 1000));\r\n    setIsSuccess(true);\r\n    await new Promise((resolve) => setTimeout(resolve, 500));\r\n\r\n    onSubmit(email, password, remember);\r\n    setIsSubmitting(false);\r\n    setIsSuccess(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-8 rounded-2xl backdrop-blur-sm bg-black/50 border border-white/10\">\r\n      <div className=\"mb-8 text-center\">\r\n        <h2 className=\"text-3xl font-bold mb-2 relative group\">\r\n          <span className=\"absolute -inset-1 bg-gradient-to-r from-purple-600/30 via-pink-500/30 to-blue-500/30 blur-xl opacity-75 group-hover:opacity-100 transition-all duration-500 animate-pulse\"></span>\r\n          <span className=\"relative inline-block text-3xl font-bold mb-2 text-white\">\r\n            NexusGate\r\n          </span>\r\n          <span className=\"absolute -inset-0.5 bg-gradient-to-r from-purple-500/20 to-pink-500/20 blur-sm opacity-0 group-hover:opacity-100 transition-all duration-300\"></span>\r\n        </h2>\r\n        <div className=\"text-white/80 flex flex-col items-center space-y-1\">\r\n          <span className=\"relative group cursor-default\">\r\n            <span className=\"absolute -inset-1 bg-gradient-to-r from-purple-600/20 to-pink-600/20 blur-sm opacity-0 group-hover:opacity-100 transition-opacity duration-500\"></span>\r\n            <span className=\"relative inline-block animate-pulse\">\r\n              Your gaming universe awaits\r\n            </span>\r\n          </span>\r\n          <span className=\"text-xs text-white/50 animate-pulse\">\r\n            [Press Enter to join the adventure]\r\n          </span>\r\n          <div className=\"flex space-x-2 text-xs text-white/40\">\r\n            <span className=\"animate-pulse\">‚öîÔ∏è</span>\r\n            <span className=\"animate-bounce\">üéÆ</span>\r\n            <span className=\"animate-pulse\">üèÜ</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n        <FormInput\r\n          icon={<Mail className=\"text-white/60\" size={18} />}\r\n          type=\"email\"\r\n          placeholder=\"Email address\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n\r\n        <div className=\"relative\">\r\n          <FormInput\r\n            icon={<Lock className=\"text-white/60\" size={18} />}\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n          <button\r\n            type=\"button\"\r\n            className=\"absolute right-3 top-1/2 -translate-y-1/2 text-white/60 hover:text-white focus:outline-none transition-colors\"\r\n            onClick={() => setShowPassword(!showPassword)}\r\n            aria-label={showPassword ? \"Hide password\" : \"Show password\"}\r\n          >\r\n            {showPassword ? <EyeOff size={18} /> : <Eye size={18} />}\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            <div\r\n              onClick={() => setRemember(!remember)}\r\n              className=\"cursor-pointer\"\r\n            >\r\n              <ToggleSwitch\r\n                checked={remember}\r\n                onChange={() => setRemember(!remember)}\r\n                id=\"remember-me\"\r\n              />\r\n            </div>\r\n            <label\r\n              htmlFor=\"remember-me\"\r\n              className=\"text-sm text-white/80 cursor-pointer hover:text-white transition-colors\"\r\n              onClick={() => setRemember(!remember)}\r\n            >\r\n              Remember me\r\n            </label>\r\n          </div>\r\n          <a\r\n            href=\"#\"\r\n            className=\"text-sm text-white/80 hover:text-white transition-colors\"\r\n          >\r\n            Forgot password?\r\n          </a>\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          disabled={isSubmitting}\r\n          className={`w-full py-3 rounded-lg ${\r\n            isSuccess ? \"animate-success\" : \"bg-purple-600 hover:bg-purple-700\"\r\n          } text-white font-medium transition-all duration-200 ease-in-out transform hover:-translate-y-1 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-opacity-50 disabled:opacity-70 disabled:cursor-not-allowed disabled:transform-none shadow-lg shadow-purple-500/20 hover:shadow-purple-500/40`}\r\n        >\r\n          {isSubmitting ? \"Logging in...\" : \"Enter NexusGate\"}\r\n        </button>\r\n      </form>\r\n\r\n      <div className=\"mt-8\">\r\n        <div className=\"relative flex items-center justify-center\">\r\n          <div className=\"border-t border-white/10 absolute w-full\"></div>\r\n          <div className=\"bg-transparent px-4 relative text-white/60 text-sm\">\r\n            quick access via\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-6 grid grid-cols-3 gap-3\">\r\n          <SocialButton icon={<Chrome size={18} />} name=\"Chrome\" />\r\n          <SocialButton icon={<Twitter size={18} />} name=\"X\" />\r\n          <SocialButton icon={<Gamepad2 size={18} />} name=\"Steam\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mt-8 text-center text-sm text-white/60\">\r\n        Don&#39;t have an account?{\" \"}\r\n        <a\r\n          href=\"#\"\r\n          className=\"font-medium text-white hover:text-purple-300 transition-colors\"\r\n        >\r\n          Create Account\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Export as default components\r\nconst LoginPage = {\r\n  LoginForm,\r\n  VideoBackground,\r\n};\r\n\r\nexport default LoginPage;\r\n",
      "type": "registry:component"
    }
  ]
}