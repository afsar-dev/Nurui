{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "retro-cursor",
  "type": "registry:component",
  "dependencies": [
    "framer-motion"
  ],
  "devDependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "./src/components/nurui/retro-cursor-demo.tsx",
      "content": "\"use client\";\r\nimport { RetroCursor } from \"@/components/nurui/retro-cursor\";\r\nimport { useMousePosition } from \"@/utils/use-mouse-position\";\r\n\r\nconst RetroCursorDemo = () => {\r\n  const mousePosition = useMousePosition();\r\n  return (\r\n    <>\r\n      <p className=\"text-3xl text-center pt-4 text-[#3ca2fa] font-bold\">\r\n        Move cursor to see the effect.\r\n      </p>\r\n      <RetroCursor position={mousePosition} />{\" \"}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RetroCursorDemo;\r\n",
      "type": "registry:component"
    },
    {
      "path": "./src/components/nurui/retro-cursor.tsx",
      "content": "\"use client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\ninterface RetroCursorProps {\r\n  position: { x: number; y: number };\r\n}\r\n\r\nexport function RetroCursor({ position }: RetroCursorProps) {\r\n  const [trail, setTrail] = useState<\r\n    Array<{ x: number; y: number; id: number }>\r\n  >([]);\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (position.x === 0 && position.y === 0) return;\r\n\r\n    // Only start tracking after the mouse has moved\r\n    if (!isActive && (position.x !== 0 || position.y !== 0)) {\r\n      setIsActive(true);\r\n    }\r\n\r\n    if (isActive) {\r\n      setTrail((prevTrail) => {\r\n        const newTrail = [\r\n          { x: position.x, y: position.y, id: Date.now() },\r\n          ...prevTrail.slice(0, 5), // Keep only 6 trail positions\r\n        ];\r\n        return newTrail;\r\n      });\r\n    }\r\n  }, [position, isActive]);\r\n\r\n  // Hide real cursor\r\n  useEffect(() => {\r\n    document.body.style.cursor = \"none\";\r\n    return () => {\r\n      document.body.style.cursor = \"auto\";\r\n    };\r\n  }, []);\r\n\r\n  // Return if mouse hasn't moved yet\r\n  if (!isActive) return null;\r\n\r\n  return (\r\n    <div className=\"pointer-events-none fixed inset-0 z-[9999]\">\r\n      {/* Trail effects */}\r\n      {trail.map((pos, index) => (\r\n        <motion.div\r\n          key={pos.id}\r\n          className=\"absolute w-1 h-1 rounded-full bg-cyan-500\"\r\n          style={{\r\n            left: pos.x,\r\n            top: pos.y,\r\n            opacity: 1 - index * 0.15,\r\n          }}\r\n          initial={{ scale: 1 }}\r\n          animate={{ scale: 1 - index * 0.15 }}\r\n        />\r\n      ))}\r\n\r\n      {/* Main cursor */}\r\n      <motion.div\r\n        className=\"absolute w-6 h-6 pointer-events-none z-50\"\r\n        style={{\r\n          left: position.x - 2,\r\n          top: position.y - 2,\r\n          backgroundImage: `url(\"data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M7 1L7 17L11 13H17L7 1Z' fill='white' stroke='black' strokeWidth='1'/%3E%3C/svg%3E\")`,\r\n          backgroundRepeat: \"no-repeat\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}",
      "type": "registry:component"
    }
  ]
}