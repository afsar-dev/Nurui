{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "info-card",
  "type": "registry:component",
  "dependencies": [
    "clsx",
    "tailwind-merge"
  ],
  "devDependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "./src/components/nurui/info-card-demo.tsx",
      "content": "import React from \"react\";\nimport { InfoCard } from \"@/components/nurui/info-card\";\n\nconst containerStyle: React.CSSProperties = {\n  display: \"flex\",\n  gap: 24,\n  padding: 24,\n  flexWrap: \"wrap\",\n  justifyContent: \"center\",\n  alignItems: \"flex-start\",\n  background: \"none\",\n  fontFamily: \"var(--font-family)\",\n  margin: 0,\n};\n\nconst fileContainerStyle: React.CSSProperties = {\n  width: 388,\n  height: 378,\n  borderRadius: \"1em\",\n  position: \"relative\",\n  overflow: \"hidden\",\n  padding: 0,\n  cursor: \"pointer\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  background: \"none\",\n  boxSizing: \"border-box\",\n};\n\nexport const InfoCardDemo: React.FC = () => (\n  <div className=\"py-24\" style={containerStyle}>\n    <div\n      className=\"file-container\"\n      id=\"container1\"\n      style={{\n        ...fileContainerStyle,\n        [\"--hover-text-color\" as string]: \"#242424\", // Unique for card 1\n      }}\n    >\n      <InfoCard\n        title=\"American English\"\n        description=\"Master American English efficiently with personalized lessons, cultural insights, and practical exercises.\"\n        borderColor=\"#80eeb4\"\n        borderBgColor=\"#80eeb433\"\n        textColor=\"#fff\"\n        hoverTextColor=\"#80eeb4\"\n        effectBgColor=\"#80eeb466\"\n        contentPadding=\"14.3px 16px\"\n      />\n    </div>\n  </div>\n);\n",
      "type": "registry:component"
    },
    {
      "path": "./src/components/nurui/info-card.tsx",
      "content": "\"use client\";\nimport React, { useRef, useState } from \"react\";\nimport \"./styles/info-card.css\"; // Ensure you have the CSS file for styles\n\n// RTL detection for Hebrew/Arabic\nfunction isRTL(text: string) {\n  return /[\\u0590-\\u05FF\\u0600-\\u06FF\\u0700-\\u074F]/.test(text);\n}\n\nexport interface InfoCardProps {\n  title: string;\n  description: string;\n  width?: number;\n  height?: number;\n  borderColor?: string;\n  borderBgColor?: string;\n  borderWidth?: number;\n  borderPadding?: number;\n  cardBgColor?: string;\n  shadowColor?: string;\n  patternColor1?: string;\n  patternColor2?: string;\n  textColor?: string;\n  hoverTextColor?: string;\n  fontFamily?: string;\n  rtlFontFamily?: string;\n  effectBgColor?: string;\n  contentPadding?: string;\n}\n\nexport const InfoCard: React.FC<InfoCardProps> = ({\n  title,\n  description,\n  width = 388,\n  height = 378,\n  borderColor = \"#80eeb4\",\n  borderBgColor = \"#242424\",\n  borderWidth = 3,\n  borderPadding = 14,\n  cardBgColor = \"#000\",\n  textColor = \"#f5f5f5\",\n  hoverTextColor = \"#242424\",\n  fontFamily = \"'Roboto Mono', monospace\",\n  rtlFontFamily = \"'Montserrat', sans-serif\",\n  effectBgColor = \"#80eeb4\",\n  contentPadding = \"10px 16px\",\n}) => {\n  const [hovered, setHovered] = useState(false);\n  const borderRef = useRef<HTMLDivElement>(null);\n\n  // Mouse movement for rotating border\n  const handleMouseMove = (e: React.MouseEvent<HTMLDivElement>) => {\n    const border = borderRef.current;\n    if (!border) return;\n    const rect = border.getBoundingClientRect();\n    const x = e.clientX - rect.left - rect.width / 2;\n    const y = e.clientY - rect.top - rect.height / 2;\n    const angle = Math.atan2(y, x);\n    border.style.setProperty(\"--rotation\", `${angle}rad`);\n  };\n\n  // RTL logic\n  const rtl = isRTL(title) || isRTL(description);\n  const effectiveFont = rtl ? rtlFontFamily : fontFamily;\n  const titleDirection = isRTL(title) ? \"rtl\" : \"ltr\";\n  const descDirection = isRTL(description) ? \"rtl\" : \"ltr\";\n\n  // Sizes for inner card (matches .inner-container: 354x344)\n\n  // Pattern background (unchanged, just colors are props)\n\n  // Border gradient\n  const borderGradient = `conic-gradient(from var(--rotation,0deg), ${borderColor} 0deg, ${borderColor} 90deg, ${borderBgColor} 90deg, ${borderBgColor} 360deg)`;\n\n  return (\n    <div\n      ref={borderRef}\n      onMouseMove={handleMouseMove}\n      onMouseEnter={() => setHovered(true)}\n      onMouseLeave={() => {\n        setHovered(false);\n        if (borderRef.current)\n          borderRef.current.style.setProperty(\"--rotation\", \"0deg\");\n      }}\n      style={\n        {\n          width,\n          height,\n          border: `${borderWidth}px solid transparent`,\n          borderRadius: \"1em\",\n          backgroundOrigin: \"border-box\",\n          backgroundClip: \"padding-box, border-box\",\n          backgroundImage: `linear-gradient(${cardBgColor}, ${cardBgColor}), ${borderGradient}`,\n          padding: borderPadding,\n          boxSizing: \"border-box\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          cursor: \"pointer\",\n          userSelect: \"none\",\n          transition: \"box-shadow 0.3s\",\n          position: \"relative\",\n          fontFamily: effectiveFont,\n        } as React.CSSProperties\n      }\n    >\n      <div\n        style={{\n          flexGrow: 1,\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"space-between\",\n          padding: contentPadding,\n          minHeight: 0,\n        }}\n      >\n        <h1\n          style={{\n            fontSize: 21,\n            fontWeight: \"bold\",\n            letterSpacing: \"-.01em\",\n            lineHeight: \"normal\",\n            marginBottom: 5,\n            color: hovered ? hoverTextColor : textColor,\n            transition: \"color 0.3s ease\",\n            position: \"relative\",\n            overflow: \"hidden\",\n            direction: titleDirection,\n            width: \"auto\",\n          }}\n        >\n          <span\n            style={{\n              position: \"relative\",\n              zIndex: 10,\n              padding: \"2px 4px\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              textAlign: \"center\",\n              width: \"100%\",\n              height: \"100%\",\n            }}\n          >\n            {title}\n          </span>\n          <span\n            style={{\n              clipPath: hovered\n                ? \"polygon(0 0, 100% 0, 100% 100%, 0% 100%)\"\n                : \"polygon(0 50%, 100% 50%, 100% 50%, 0 50%)\",\n              transformOrigin: \"center\",\n              transition: \"all cubic-bezier(.1,.5,.5,1) 0.4s\",\n              position: \"absolute\",\n              left: -4,\n              right: -4,\n              top: -4,\n              bottom: -4,\n              zIndex: 0,\n              backgroundColor: effectBgColor,\n            }}\n          />\n        </h1>\n        <p\n          style={{\n            fontSize: 14,\n            color: textColor,\n            display: \"-webkit-box\",\n            WebkitLineClamp: 3,\n            WebkitBoxOrient: \"vertical\",\n            overflow: \"hidden\",\n            direction: descDirection,\n            marginBottom: 0,\n            paddingBottom: 0,\n            minHeight: 0,\n            textAlign: \"center\",\n          }}\n        >\n          {description}\n        </p>\n      </div>\n    </div>\n  );\n};",
      "type": "registry:component"
    },
    {
      "path": "./src/components/nurui/styles/info-card.css",
      "content": "@import \"tw-animate-css\";\n\n:root {\n  --border-color-1: #ff5613;\n  --border-color-2: #9f4eff;\n  --border-color-3: #2196f3;\n  --border-bg-color: #f5f5f5;\n  --card-bg-color: #fff;\n  --shadow-color: #e0e0e0;\n  --text-color: #242424;\n  --hover-text-color-1: #000;\n  --hover-text-color-2: #fff;\n  --hover-text-color-3: #fff;\n  --font-family: \"Roboto Mono\", monospace;\n  --rtl-font-family: \"Montserrat\", sans-serif;\n  --pattern-color1: rgba(200, 200, 200, 0.1);\n  --pattern-color2: rgba(220, 220, 220, 0.1);\n}\n\n.dark {\n  --border-color-1: #daff3e;\n  --border-color-2: #9f4eff;\n  --border-color-3: #2196f3;\n  --border-bg-color: #242424;\n  --card-bg-color: #000;\n  --shadow-color: #242424;\n  --text-color: #f5f5f5;\n  --hover-text-color-1: #242424;\n  --hover-text-color-2: #000;\n  --hover-text-color-3: #242424;\n  --font-family: \"Roboto Mono\", monospace;\n  --rtl-font-family: \"Montserrat\", sans-serif;\n  --pattern-color1: rgba(230, 230, 230, 0.15);\n  --pattern-color2: rgba(240, 240, 240, 0.15);\n}\n",
      "type": "registry:component"
    }
  ]
}