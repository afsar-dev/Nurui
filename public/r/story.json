{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "story",
  "type": "registry:component",
  "dependencies": [
    "clsx",
    "tailwind-merge",
    "class-variance-authority",
    "@radix-ui/react-slot",
    "@radix-ui/react-dialog",
    "lucide-react",
    "@radix-ui/react-avatar"
  ],
  "devDependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "./src/components/nurui/story-demo.tsx",
      "content": "import { Avatar, AvatarFallback, AvatarImage } from \"@/components/nurui/avatar\";\r\nimport { VisuallyHidden } from \"@radix-ui/react-visually-hidden\";\r\nimport {\r\n  Story,\r\n  StoryProgress,\r\n  StoryControls,\r\n  StorySlide,\r\n  StoryOverlay,\r\n} from \"@/components/nurui/story\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogTrigger,\r\n  DialogDescription,\r\n} from \"@/components/nurui/story-dialog\";\r\nimport Image from \"next/image\";\r\n\r\nconst FABRIZIO_STORIES = [\r\n  {\r\n    title: \"Champions league will begin soon\",\r\n    caption: \"whos you are running for ?\",\r\n    storyImage:\r\n      \"https://images.unsplash.com/photo-1569617234470-9e9813ee1dae?q=80&w=2235&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\r\n  },\r\n  {\r\n    title: \"who's your favourite player ?\",\r\n    caption: \"who you think will win the champions league ?\",\r\n    storyImage:\r\n      \"https://images.unsplash.com/photo-1570498839593-e565b39455fc?q=80&w=2235&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\r\n  },\r\n];\r\n\r\nconst SHADCN_STORIES = [\r\n  {\r\n    title: \"Easy vibes\",\r\n    caption: \"In the System Prompts.\",\r\n    storyImage:\r\n      \"https://pbs.twimg.com/media/Gr5BeX6WwAAgGH_?format=jpg&name=large\",\r\n  },\r\n  {\r\n    title: \"The new calendar.tsx is here\",\r\n    caption: `\r\n      â†’ Latest react-daypicker\r\n      â†’ Tailwind v3 and v4\r\n      â†’ Date, range & time pickers\r\n      â†’ Persian, Hijri & timezone support\r\n      â†’ 30+ examples to copy, paste, and build.\r\n    `,\r\n    storyImage:\r\n      \"https://pbs.twimg.com/media/GsxdzRfb0AIUBSs?format=jpg&name=large\",\r\n  },\r\n  {\r\n    title: \"ðŸ¤£ðŸ¤£ðŸ¤£ðŸ¤£ðŸ¤£\",\r\n    caption: \"Me walking away after adding min-w-0 and it works.\",\r\n    storyImage:\r\n      \"https://pbs.twimg.com/media/Gsh-UBoasAM_Uin?format=jpg&name=medium\",\r\n  },\r\n];\r\n\r\nconst NBA_STORIES = [\r\n  {\r\n    title: \"Shai follows 38 in Game 1 with 34 tonight ðŸ”¥ðŸ”¥ðŸ”¥\",\r\n    caption:\r\n      \"MOST POINTS EVER by a player in his first 2 career Finals games ðŸš¨ðŸš¨\",\r\n    storyImage:\r\n      \"https://pbs.twimg.com/media/Gs-BiiMbsAAIK9p?format=jpg&name=large\",\r\n  },\r\n];\r\n\r\nconst StoryDemo = () => {\r\n  return (\r\n    <section className=\"p-20 w-full place-content-center\">\r\n      <div className=\"flex gap-4 justify-center\">\r\n        {/* ======== FABRIZIO STORIES ======== */}\r\n        <Dialog>\r\n          <DialogTrigger>\r\n            <Avatar className=\"size-12\">\r\n              <AvatarImage\r\n                src=\"https://scontent.forn3-5.fna.fbcdn.net/v/t39.30808-1/347110386_993663875383747_583934797072922306_n.jpg\"\r\n                alt=\"@fabrizioRomano\"\r\n              />\r\n              <AvatarFallback>FR</AvatarFallback>\r\n            </Avatar>\r\n          </DialogTrigger>\r\n          <DialogContent className=\"aspect-[12/16] w-auto h-[90vh] overflow-hidden p-0\">\r\n            <VisuallyHidden asChild>\r\n              <DialogTitle>Story</DialogTitle>\r\n            </VisuallyHidden>\r\n            {/* âœ… Added Description */}\r\n            <VisuallyHidden asChild>\r\n              <DialogDescription>\r\n                Instagram-style story viewer\r\n              </DialogDescription>\r\n            </VisuallyHidden>\r\n\r\n            <Story\r\n              className=\"relative size-full\"\r\n              duration={5000}\r\n              mediaLength={FABRIZIO_STORIES.length}\r\n            >\r\n              <DialogHeader className=\"px-4 py-6\">\r\n                <div className=\"relative z-10 flex items-center gap-2\">\r\n                  <Avatar className=\"size-10\">\r\n                    <AvatarImage\r\n                      src=\"https://scontent.forn3-5.fna.fbcdn.net/v/t39.30808-1/347110386_993663875383747_583934797072922306_n.jpg\"\r\n                      alt=\"@fabrizioRomano\"\r\n                    />\r\n                    <AvatarFallback>FR</AvatarFallback>\r\n                  </Avatar>\r\n                  <StoryProgress\r\n                    className=\"flex-1\"\r\n                    progressWrapClass=\"h-1.5\"\r\n                    progressActiveClass=\"bg-blue-500\"\r\n                  />\r\n                  <StoryControls\r\n                    variant=\"ghost\"\r\n                    className=\"text-white rounded-full\"\r\n                  />\r\n                </div>\r\n              </DialogHeader>\r\n              {FABRIZIO_STORIES.map((story, idx) => (\r\n                <StorySlide\r\n                  key={idx}\r\n                  index={idx}\r\n                  className=\"absolute inset-0 size-full\"\r\n                >\r\n                  <Image\r\n                    src={story.storyImage}\r\n                    className=\"w-full h-auto\"\r\n                    alt={story.title}\r\n                    fill\r\n                    draggable={false}\r\n                    unoptimized\r\n                  />\r\n                  <div className=\"absolute bottom-4 left-4 z-10 space-y-1 text-white p-4\">\r\n                    <a\r\n                      className=\"text-secondary\"\r\n                      href=\"https://x.com/FabrizioRomano\"\r\n                    >\r\n                      @FabrizioRomano\r\n                    </a>\r\n                    <h3 className=\"text-medium tracking-tight text-foreground-muted\">\r\n                      {story.title}\r\n                    </h3>\r\n                    <p className=\"text-sm text-slate-200\">{story.caption}</p>\r\n                  </div>\r\n                </StorySlide>\r\n              ))}\r\n              <StoryOverlay />\r\n            </Story>\r\n          </DialogContent>\r\n        </Dialog>\r\n\r\n        {/* ======== SHADCN STORIES ======== */}\r\n        <Dialog>\r\n          <DialogTrigger>\r\n            <Avatar className=\"size-12\">\r\n              <AvatarImage\r\n                src=\"https://pbs.twimg.com/profile_images/1593304942210478080/TUYae5z7_400x400.jpg\"\r\n                alt=\"@shadcn\"\r\n              />\r\n              <AvatarFallback>SC</AvatarFallback>\r\n            </Avatar>\r\n          </DialogTrigger>\r\n          <DialogContent className=\"aspect-[12/16] w-auto h-[90vh] overflow-hidden p-0 rounded-md\">\r\n            <VisuallyHidden asChild>\r\n              <DialogTitle>Story</DialogTitle>\r\n            </VisuallyHidden>\r\n            <VisuallyHidden asChild>\r\n              <DialogDescription>\r\n                Instagram-style story viewer\r\n              </DialogDescription>\r\n            </VisuallyHidden>\r\n\r\n            <Story\r\n              className=\"relative size-full\"\r\n              duration={5000}\r\n              mediaLength={SHADCN_STORIES.length}\r\n            >\r\n              <DialogHeader className=\"px-4 py-6\">\r\n                <div className=\"relative z-10 flex items-center gap-2\">\r\n                  <Avatar className=\"size-10\">\r\n                    <AvatarImage\r\n                      src=\"https://pbs.twimg.com/profile_images/1593304942210478080/TUYae5z7_400x400.jpg\"\r\n                      alt=\"@shadcn\"\r\n                    />\r\n                    <AvatarFallback>SC</AvatarFallback>\r\n                  </Avatar>\r\n                  <StoryProgress\r\n                    className=\"flex-1\"\r\n                    progressWrapClass=\"h-1.5\"\r\n                    progressActiveClass=\"bg-pink-500\"\r\n                  />\r\n                  <StoryControls\r\n                    variant=\"ghost\"\r\n                    className=\"text-white rounded-full\"\r\n                  />\r\n                </div>\r\n              </DialogHeader>\r\n              {SHADCN_STORIES.map((story, idx) => (\r\n                <StorySlide\r\n                  key={idx}\r\n                  index={idx}\r\n                  className=\"absolute inset-0 size-full\"\r\n                >\r\n                  <Image\r\n                    src={story.storyImage}\r\n                    className=\"w-full h-auto\"\r\n                    alt={story.title}\r\n                    fill\r\n                    draggable={false}\r\n                    unoptimized\r\n                  />\r\n                  <div className=\"absolute bottom-4 left-4 z-10 space-y-1 text-white p-4\">\r\n                    <a className=\"text-secondary\" href=\"https://x.com/Shadcn\">\r\n                      @Shadcn\r\n                    </a>\r\n                    <h3 className=\"text-medium tracking-tight text-foreground-muted\">\r\n                      {story.title}\r\n                    </h3>\r\n                    <p className=\"text-sm text-slate-200\">{story.caption}</p>\r\n                  </div>\r\n                </StorySlide>\r\n              ))}\r\n              <StoryOverlay />\r\n            </Story>\r\n          </DialogContent>\r\n        </Dialog>\r\n\r\n        {/* ======== NBA STORIES ======== */}\r\n        <Dialog>\r\n          <DialogTrigger>\r\n            <Avatar className=\"size-12\">\r\n              <AvatarImage\r\n                src=\"https://pbs.twimg.com/profile_images/1931904469446377472/mjaR8LDc_400x400.jpg\"\r\n                alt=\"@nba\"\r\n              />\r\n              <AvatarFallback>NB</AvatarFallback>\r\n            </Avatar>\r\n          </DialogTrigger>\r\n          <DialogContent className=\"aspect-[12/16] w-auto h-[90vh] overflow-hidden p-0 rounded-md\">\r\n            <VisuallyHidden asChild>\r\n              <DialogTitle>Story</DialogTitle>\r\n            </VisuallyHidden>\r\n            <VisuallyHidden asChild>\r\n              <DialogDescription>\r\n                Instagram-style story viewer\r\n              </DialogDescription>\r\n            </VisuallyHidden>\r\n\r\n            <Story\r\n              className=\"relative size-full\"\r\n              duration={8000}\r\n              mediaLength={NBA_STORIES.length}\r\n            >\r\n              <DialogHeader className=\"px-4 py-6\">\r\n                <div className=\"relative z-10 flex items-center gap-2\">\r\n                  <Avatar className=\"size-10\">\r\n                    <AvatarImage\r\n                      src=\"https://pbs.twimg.com/profile_images/1931904469446377472/mjaR8LDc_400x400.jpg\"\r\n                      alt=\"@nba\"\r\n                    />\r\n                    <AvatarFallback>NB</AvatarFallback>\r\n                  </Avatar>\r\n                  <StoryProgress\r\n                    className=\"flex-1\"\r\n                    progressWrapClass=\"h-1.5\"\r\n                    progressActiveClass=\"bg-red-500\"\r\n                  />\r\n                  <StoryControls\r\n                    variant=\"ghost\"\r\n                    className=\"text-white rounded-full\"\r\n                  />\r\n                </div>\r\n              </DialogHeader>\r\n              {NBA_STORIES.map((story, idx) => (\r\n                <StorySlide\r\n                  key={idx}\r\n                  index={idx}\r\n                  className=\"absolute inset-0 size-full\"\r\n                >\r\n                  <Image\r\n                    src={story.storyImage}\r\n                    className=\"w-full h-auto\"\r\n                    alt={story.title}\r\n                    fill\r\n                    draggable={false}\r\n                    unoptimized\r\n                  />\r\n                  <div className=\"absolute bottom-4 left-4 z-10 space-y-1 text-white p-4\">\r\n                    <a className=\"text-secondary\" href=\"https://x.com/nba\">\r\n                      @nba\r\n                    </a>\r\n                    <h3 className=\"text-medium tracking-tight text-foreground-muted\">\r\n                      {story.title}\r\n                    </h3>\r\n                    <p className=\"text-sm text-slate-200\">{story.caption}</p>\r\n                  </div>\r\n                </StorySlide>\r\n              ))}\r\n              <StoryOverlay />\r\n            </Story>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport { StoryDemo };",
      "type": "registry:component"
    },
    {
      "path": "./src/components/nurui/story.tsx",
      "content": "\"use client\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport * as React from \"react\";\r\nimport { StoryButton, ButtonProps } from \"@/components/nurui/story-button\";\r\nimport { PauseIcon, PlayIcon, ReplyIcon } from \"lucide-react\";\r\n\r\ninterface StoryProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  mediaLength: number;\r\n  duration?: number;\r\n}\r\ninterface StoryContextValue {\r\n  mediaLength: number;\r\n  currentIndex: number;\r\n  progress: number;\r\n  isPaused: boolean;\r\n  isEnded: boolean;\r\n  handleControl: () => void;\r\n  setCurrentIndex: (index: number) => void;\r\n  setIsPaused: (paused: boolean) => void;\r\n  setIsEnded: (ended: boolean) => void;\r\n}\r\nconst StoryContext = React.createContext<StoryContextValue | undefined>(\r\n  undefined,\r\n);\r\nfunction useStoryContext() {\r\n  const context = React.useContext(StoryContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useStoryContext must be used within a StoryProvider\");\r\n  }\r\n  return context;\r\n}\r\nexport const Story = React.forwardRef<HTMLDivElement, StoryProps>(\r\n  ({ mediaLength, duration = 2000, className, children, ...props }, ref) => {\r\n    const [currentIndex, setCurrentIndex] = React.useState(0);\r\n    const [progress, setProgress] = React.useState(0);\r\n    const [isPaused, setIsPaused] = React.useState(false);\r\n    const [isEnded, setIsEnded] = React.useState(false);\r\n    const progressRef = React.useRef<number>(0);\r\n    const intervalRef = React.useRef<ReturnType<typeof setInterval> | null>(\r\n      null,\r\n    );\r\n\r\n    React.useEffect(() => {\r\n      progressRef.current = 0;\r\n      setProgress(0);\r\n    }, [currentIndex, duration, mediaLength]);\r\n    React.useEffect(() => {\r\n      if (mediaLength === 0 || isPaused) return;\r\n\r\n      if (intervalRef.current) {\r\n        clearInterval(intervalRef.current);\r\n        intervalRef.current = null;\r\n      }\r\n\r\n      const tick = 50;\r\n      const totalTicks = duration / tick;\r\n\r\n      intervalRef.current = setInterval(() => {\r\n        progressRef.current += 1;\r\n        const newProgress = (progressRef.current / totalTicks) * 100;\r\n        setProgress(newProgress);\r\n\r\n        if (progressRef.current >= totalTicks) {\r\n          clearInterval(intervalRef.current!);\r\n          intervalRef.current = null;\r\n\r\n          if (currentIndex < mediaLength - 1) {\r\n            setCurrentIndex((idx) => idx + 1);\r\n          } else {\r\n            setIsPaused(true);\r\n            setIsEnded(true);\r\n          }\r\n        }\r\n      }, tick);\r\n\r\n      return () => {\r\n        if (intervalRef.current) {\r\n          clearInterval(intervalRef.current);\r\n          intervalRef.current = null;\r\n        }\r\n      };\r\n    }, [isPaused, currentIndex, duration, mediaLength]);\r\n\r\n    if (mediaLength === 0) {\r\n      return (\r\n        <div className=\"text-center text-secondary\">No stories to display</div>\r\n      );\r\n    }\r\n\r\n    const handleControl = () => {\r\n      if (isEnded) {\r\n        setCurrentIndex(0);\r\n        setIsEnded(false);\r\n        setIsPaused(false);\r\n      } else {\r\n        setIsPaused((prev) => !prev);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <StoryContext.Provider\r\n        value={{\r\n          mediaLength,\r\n          currentIndex,\r\n          progress,\r\n          isPaused,\r\n          isEnded,\r\n          handleControl,\r\n          setCurrentIndex,\r\n          setIsPaused,\r\n          setIsEnded,\r\n        }}\r\n      >\r\n        <div className={cn(\"mx-auto\", className)} ref={ref} {...props}>\r\n          {children}\r\n        </div>\r\n      </StoryContext.Provider>\r\n    );\r\n  },\r\n);\r\nStory.displayName = \"Story\";\r\n\r\nexport const StoryProgress = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement> & {\r\n    progressWrapClass?: string;\r\n    progressActiveClass?: string;\r\n  }\r\n>(({ className, progressWrapClass, progressActiveClass, ...props }, ref) => {\r\n  const {\r\n    mediaLength,\r\n    currentIndex,\r\n    progress,\r\n    setCurrentIndex,\r\n    setIsEnded,\r\n    setIsPaused,\r\n  } = useStoryContext();\r\n\r\n  const handleProgressClick = (index: number) => {\r\n    setCurrentIndex(index);\r\n    setIsPaused(false);\r\n    setIsEnded(false);\r\n  };\r\n\r\n  return (\r\n    <div className={cn(\"space-x-1 flex\", className)} ref={ref} {...props}>\r\n      {Array.from({ length: mediaLength }).map((_, index) => {\r\n        const isActive = index === currentIndex;\r\n        const isCompleted = index < currentIndex;\r\n\r\n        return (\r\n          <div\r\n            key={index}\r\n            className={cn(\r\n              \"h-1 flex-1 rounded bg-secondary cursor-pointer transition-colors\",\r\n              \"hover:bg-secondary/80\",\r\n              progressWrapClass,\r\n            )}\r\n            onClick={() => handleProgressClick(index)}\r\n            role=\"button\"\r\n            tabIndex={0}\r\n            onKeyDown={(e) => {\r\n              if (e.key === \"Enter\" || e.key === \" \") {\r\n                handleProgressClick(index);\r\n              }\r\n            }}\r\n          >\r\n            <div\r\n              className={cn(\r\n                \"h-full rounded-[inherit] transition-all duration-200\",\r\n                isActive\r\n                  ? \"bg-primary\"\r\n                  : isCompleted\r\n                    ? \"bg-primary\"\r\n                    : \"bg-transparent\",\r\n                progressActiveClass,\r\n              )}\r\n              style={{\r\n                width: isActive ? `${progress}%` : isCompleted ? \"100%\" : \"0%\",\r\n              }}\r\n            />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n});\r\nStoryProgress.displayName = \"StoryProgress\";\r\n\r\nexport const StorySlide = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement> & { index: number }\r\n>(({ index, className, ...props }, ref) => {\r\n  const { currentIndex } = useStoryContext();\r\n  if (index !== currentIndex) return null;\r\n  return (\r\n    <div className={cn(\"animate-in fade-in\", className)} ref={ref} {...props} />\r\n  );\r\n});\r\nStorySlide.displayName = \"StorySlide\";\r\n\r\nexport const StoryControls = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, ...props }, ref) => {\r\n    const { isPaused, isEnded, handleControl } = useStoryContext();\r\n    return (\r\n      <StoryButton\r\n        onClick={handleControl}\r\n        size=\"icon\"\r\n        {...props}\r\n        ref={ref}\r\n        className={className}\r\n      >\r\n        {isPaused ? isEnded ? <ReplyIcon /> : <PlayIcon /> : <PauseIcon />}\r\n      </StoryButton>\r\n    );\r\n  },\r\n);\r\nStoryControls.displayName = \"StoryControls\";\r\n\r\nexport const StoryOverlay: React.FC = () => (\r\n  <div className=\" absolute inset-0 \">\r\n    <div className=\"absolute inset-x-0 top-0 h-24 bg-gradient-to-b from-black to-transparent\" />\r\n    <div className=\"absolute inset-x-0 bottom-0 h-40 bg-gradient-to-t from-black to-transparent\" />\r\n  </div>\r\n);\r\n",
      "type": "registry:component"
    },
    {
      "path": "./src/components/nurui/story-button.tsx",
      "content": "import { Slot } from \"@radix-ui/react-slot\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\nimport * as React from \"react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-lg text-sm font-medium transition-colors outline-offset-2 focus-visible:outline focus-visible:outline-2 focus-visible:outline-ring/70 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-primary text-primary-foreground shadow-sm shadow-black/5 hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground shadow-sm shadow-black/5 hover:bg-destructive/90\",\r\n        outline:\r\n          \"border border-input bg-background shadow-sm shadow-black/5 hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground shadow-sm shadow-black/5 hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2\",\r\n        sm: \"h-8 rounded-lg px-3 text-xs\",\r\n        lg: \"h-10 rounded-lg px-8\",\r\n        icon: \"h-9 w-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  },\r\n);\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean;\r\n}\r\n\r\nconst StoryButton = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\";\r\n    return (\r\n      <Comp className={cn(buttonVariants({ variant, size, className }))} ref={ref} {...props} />\r\n    );\r\n  },\r\n);\r\nStoryButton.displayName = \"StoryButton\";\r\n\r\nexport { StoryButton, buttonVariants };",
      "type": "registry:component"
    },
    {
      "path": "./src/components/nurui/story-dialog.tsx",
      "content": "\"use client\";\r\n\r\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\";\r\nimport * as React from \"react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\nimport { Cross2Icon } from \"@radix-ui/react-icons\";\r\n\r\nconst Dialog = DialogPrimitive.Root;\r\n\r\nconst DialogTrigger = DialogPrimitive.Trigger;\r\n\r\nconst DialogPortal = DialogPrimitive.Portal;\r\n\r\nconst DialogClose = DialogPrimitive.Close;\r\n\r\nconst DialogOverlay = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Overlay\r\n    ref={ref}\r\n    className={cn(\r\n      \"fixed inset-0 z-[101] bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName;\r\n\r\nconst DialogContent = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\r\n>(({ className, children, ...props }, ref) => (\r\n  <DialogPortal>\r\n    <DialogOverlay />\r\n    <DialogPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"fixed left-1/2 top-1/2 z-[101] grid max-h-[calc(100%-4rem)] w-full -translate-x-1/2 -translate-y-1/2 gap-4 overflow-y-auto border bg-background p-6 shadow-lg shadow-black/5 duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:max-w-[400px] sm:rounded-xl\",\r\n        className,\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n      <DialogPrimitive.Close className=\"group absolute right-3 top-3 flex size-7 items-center justify-center rounded-lg outline-offset-2 transition-colors focus-visible:outline focus-visible:outline-2 focus-visible:outline-ring/70 disabled:pointer-events-none\">\r\n        <Cross2Icon\r\n          width={16}\r\n          height={16}\r\n          strokeWidth={2}\r\n          className=\"opacity-60 transition-opacity group-hover:opacity-100\"\r\n        />\r\n        <span className=\"sr-only\">Close</span>\r\n      </DialogPrimitive.Close>\r\n    </DialogPrimitive.Content>\r\n  </DialogPortal>\r\n));\r\nDialogContent.displayName = DialogPrimitive.Content.displayName;\r\n\r\nconst DialogHeader = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div className={cn(\"flex flex-col space-y-1.5 text-center sm:text-left\", className)} {...props} />\r\n);\r\nDialogHeader.displayName = \"DialogHeader\";\r\n\r\nconst DialogFooter = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end sm:gap-3\", className)}\r\n    {...props}\r\n  />\r\n);\r\nDialogFooter.displayName = \"DialogFooter\";\r\n\r\nconst DialogTitle = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Title>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Title\r\n    ref={ref}\r\n    className={cn(\"text-lg font-semibold tracking-tight\", className)}\r\n    {...props}\r\n  />\r\n));\r\nDialogTitle.displayName = DialogPrimitive.Title.displayName;\r\n\r\nconst DialogDescription = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Description>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Description\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n));\r\nDialogDescription.displayName = DialogPrimitive.Description.displayName;\r\n\r\nexport {\r\n  Dialog,\r\n  DialogClose,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogFooter,\r\n  DialogHeader,\r\n  DialogOverlay,\r\n  DialogPortal,\r\n  DialogTitle,\r\n  DialogTrigger,\r\n};",
      "type": "registry:component"
    },
    {
      "path": "./src/components/nurui/avatar.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst Avatar = React.forwardRef<\r\n  React.ElementRef<typeof AvatarPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\r\n>(({ className, ...props }, ref) => (\r\n  <AvatarPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nAvatar.displayName = AvatarPrimitive.Root.displayName;\r\n\r\nconst AvatarImage = React.forwardRef<\r\n  React.ElementRef<typeof AvatarPrimitive.Image>,\r\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\r\n>(({ className, ...props }, ref) => (\r\n  <AvatarPrimitive.Image\r\n    ref={ref}\r\n    className={cn(\"aspect-square h-full w-full\", className)}\r\n    {...props}\r\n  />\r\n));\r\nAvatarImage.displayName = AvatarPrimitive.Image.displayName;\r\n\r\nconst AvatarFallback = React.forwardRef<\r\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\r\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\r\n>(({ className, ...props }, ref) => (\r\n  <AvatarPrimitive.Fallback\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName;\r\n\r\nexport { Avatar, AvatarImage, AvatarFallback };\r\n",
      "type": "registry:component"
    }
  ]
}