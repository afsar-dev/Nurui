{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "terminal-cursor",
  "type": "registry:component",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "./src/components/nurui/terminal-cursor-demo.tsx",
      "content": "import React from \"react\";\r\nimport TerminalCursor from \"@/components/nurui/terminal-cursor\";\r\n\r\nconst TerminalCursorDemo = () => {\r\n  return (\r\n    <>\r\n      <p className=\"text-3xl text-center pt-4 text-[#3ca2fa] font-bold\">\r\n        Move cursor to see the effect.\r\n      </p>\r\n      <TerminalCursor />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TerminalCursorDemo;\r\n",
      "type": "registry:component"
    },
    {
      "path": "./src/components/nurui/terminal-cursor.tsx",
      "content": "\"use client\";\r\nimport React, { useEffect, useRef } from \"react\";\r\n\r\nconst TerminalCursor = () => {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const chars = \"01ABCDEFGHIJKLMNOPQRSTUVWXYZ#$@\";\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current!;\r\n    const ctx = canvas.getContext(\"2d\")!;\r\n    canvas.width = window.innerWidth;\r\n    canvas.height = window.innerHeight;\r\n\r\n    const particles: CodeChar[] = [];\r\n\r\n    class CodeChar {\r\n      x: number;\r\n      y: number;\r\n      alpha: number;\r\n      char: string;\r\n\r\n      constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.alpha = 1;\r\n        this.char = chars[Math.floor(Math.random() * chars.length)];\r\n      }\r\n\r\n      update() {\r\n        this.y -= 1;\r\n        this.alpha -= 0.02;\r\n      }\r\n\r\n      draw() {\r\n        ctx.fillStyle = `rgba(0, 255, 0, ${this.alpha})`;\r\n        ctx.font = \"14px monospace\";\r\n        ctx.fillText(this.char, this.x, this.y);\r\n      }\r\n    }\r\n\r\n    const animate = () => {\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      for (let i = particles.length - 1; i >= 0; i--) {\r\n        const p = particles[i];\r\n        p.update();\r\n        p.draw();\r\n        if (p.alpha <= 0) {\r\n          particles.splice(i, 1);\r\n        }\r\n      }\r\n      requestAnimationFrame(animate);\r\n    };\r\n    animate();\r\n\r\n    const onMove = (e: MouseEvent) => {\r\n      for (let i = 0; i < 2; i++) {\r\n        particles.push(new CodeChar(e.clientX, e.clientY));\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"mousemove\", onMove);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"mousemove\", onMove);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      className=\"fixed inset-0 w-full h-full pointer-events-none z-50\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default TerminalCursor;",
      "type": "registry:component"
    }
  ]
}