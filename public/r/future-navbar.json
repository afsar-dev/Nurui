{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "future-navbar",
  "type": "registry:component",
  "dependencies": [
    "clsx",
    "tailwind-merge",
    "lucide-react",
    "class-variance-authority"
  ],
  "devDependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "./src/components/nurui/futrue-navbar.tsx",
      "content": "\"use client\";\r\nimport { createContext, useState } from \"react\";\r\nimport { Github, Zap } from \"lucide-react\";\r\nimport { Frame } from \"@/components/nurui/frame\";\r\nimport Link from \"next/link\";\r\nimport FutureButton from \"./future-button\";\r\n\r\nexport const MobileMenuContext = createContext<{\r\n  showMenu: boolean;\r\n  setShowMenu: React.Dispatch<React.SetStateAction<boolean>>;\r\n}>({\r\n  showMenu: true,\r\n  setShowMenu: () => {},\r\n});\r\n\r\nfunction FutureNavbar() {\r\n  const [showMenu, setShowMenu] = useState(false);\r\n\r\n  // ðŸŽ¨ Direct color constants\r\n  const primaryStroke = \"#4f46e5\"; // Indigo\r\n  const primaryFill = \"rgba(79, 70, 229, 0.2)\";\r\n\r\n  return (\r\n    <MobileMenuContext.Provider value={{ showMenu, setShowMenu }}>\r\n      <div className=\"h-16 mt-2 mx-2 lg:-mt-px lg:-mx-px flex w-full top-0 inset-x-0 z-40\">\r\n        <div className=\"size-full relative -mr-[11px] hidden lg:block\">\r\n          <Frame\r\n            className=\"drop-shadow-2xl\"\r\n            paths={JSON.parse(\r\n              `[{\r\n                \"show\": true,\r\n                \"style\": {\"strokeWidth\": \"1\", \"stroke\": \"${primaryStroke}\", \"fill\": \"rgba(79,70,229,0.08)\"},\r\n                \"path\":[[\"M\",\"0\",\"0\"],[\"L\",\"100% - 6\",\"0\"],[\"L\",\"100% - 11\",\"100% - 64\"],[\"L\",\"100% + 0\",\"0% + 29\"],[\"L\",\"0\",\"11\"],[\"L\",\"0\",\"0\"]]\r\n              },{\r\n                \"show\": true,\r\n                \"style\": {\"strokeWidth\": \"1\", \"stroke\": \"${primaryStroke}38\", \"fill\": \"transparent\"},\r\n                \"path\":[[\"M\",\"0\",\"14\"],[\"L\",\"100% - 7\",\"33\"]]\r\n              }]`,\r\n            )}\r\n          />\r\n        </div>\r\n        <div className=\"flex lg:container h-full relative flex-none w-full\">\r\n          <div className=\"flex-none h-full px-14 relative w-full lg:w-auto\">\r\n            <Frame\r\n              enableBackdropBlur\r\n              className=\"drop-shadow-2xl\"\r\n              paths={JSON.parse(\r\n                `[{\r\n                  \"show\":true,\r\n                  \"style\":{\"strokeWidth\":\"1\",\"stroke\":\"${primaryStroke}\",\"fill\":\"${primaryFill}\"},\r\n                  \"path\":[[\"M\",\"6\",\"0\"],[\"L\",\"100% - 6.5\",\"0\"],[\"L\",\"100% + 0\",\"0% + 9\"],[\"L\",\"100% - 28\",\"100% - 15\"],[\"L\",\"162\",\"100% - 15\"],[\"L\",\"164\",\"100% - 30\"],[\"L\",\"153\",\"100% - 15\"],[\"L\",\"27\",\"100% - 15\"],[\"L\",\"0\",\"0% + 8\"],[\"L\",\"6\",\"0\"]]\r\n                },{\r\n                  \"show\":true,\r\n                  \"style\":{\"strokeWidth\":\"1\",\"stroke\":\"${primaryStroke}91\",\"fill\":\"transparent\"},\r\n                  \"path\":[[\"M\",\"32\",\"100% - 15\"],[\"L\",\"0% + 152.5\",\"100% - 15\"],[\"L\",\"0% + 163.5\",\"100% - 29\"],[\"L\",\"0% + 161.5\",\"100% - 15\"],[\"L\",\"100% - 32.5\",\"100% - 15\"],[\"L\",\"100% - 36.5\",\"100% - 7\"],[\"L\",\"0% + 163.5\",\"100% - 7\"],[\"L\",\"0% + 165.5\",\"100% - 23\"],[\"L\",\"0% + 152.5\",\"100% - 7\"],[\"L\",\"37\",\"100% - 7\"],[\"L\",\"32\",\"100% - 15\"]]\r\n                },{\r\n                  \"show\":true,\r\n                  \"style\":{\"strokeWidth\":\"1\",\"stroke\":\"${primaryStroke}3B\",\"fill\":\"transparent\"},\r\n                  \"path\":[[\"M\",\"0\",\"0% + 33\"],[\"M\",\"4\",\"0% + 33\"],[\"L\",\"0% + 18.5\",\"100% - 12\"],[\"L\",\"0% + 23.5\",\"100% - 12\"],[\"L\",\"29\",\"100% + 0\"],[\"L\",\"155\",\"100% - 0\"],[\"L\",\"160\",\"100% - 8\"],[\"L\",\"161\",\"100% - 0\"],[\"L\",\"100% - 28\",\"100% + 0\"],[\"L\",\"100% - 23\",\"100% - 11\"],[\"L\",\"100% - 17\",\"100% - 11\"],[\"L\",\"100% - 14\",\"100% - 14\"],[\"L\",\"100% + 0\",\"100% - 14\"]]\r\n                }]`,\r\n              )}\r\n            />\r\n            <div className=\"flex items-center mt-2.5 relative\">\r\n              <Link href=\"/\" className=\"me-16 font-bold\">\r\n                Nur/ui\r\n              </Link>\r\n              <div className=\"hidden lg:flex gap-8 font-medium\">\r\n                <Link href=\"/docs\">Docs</Link>\r\n                <Link href=\"/docs\">Components</Link>\r\n                <Link href=\"/docs\">About</Link>\r\n              </div>\r\n              <div\r\n                onClick={() => setShowMenu(true)}\r\n                className=\"cursor-pointer ms-auto flex items-center gap-2 lg:hidden font-medium\"\r\n              >\r\n                <Zap className=\"size-4\" />\r\n                Menu\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"w-full relative -ml-[25px] lg:flex justify-end pe-8 hidden\">\r\n            <Frame\r\n              enableBackdropBlur\r\n              className=\"drop-shadow-2xl\"\r\n              paths={JSON.parse(\r\n                `[{\r\n                  \"show\":true,\r\n                  \"style\":{\"strokeWidth\":\"1\",\"stroke\":\"${primaryStroke}80\",\"fill\":\"rgba(79,70,229,0.1)\"},\r\n                  \"path\":[[\"M\",\"19\",\"0\"],[\"L\",\"100% - 5\",\"0\"],[\"L\",\"100% + 0\",\"0% + 7\"],[\"L\",\"100% - 36\",\"100% - 20\"],[\"L\",\"0\",\"100% - 20\"],[\"L\",\"25\",\"8.999992370605469\"],[\"L\",\"19\",\"1\"]]\r\n                },{\r\n                  \"show\":true,\r\n                  \"style\":{\"strokeWidth\":\"1\",\"stroke\":\"${primaryStroke}3B\",\"fill\":\"transparent\"},\r\n                  \"path\":[[\"M\",\"25\",\"100% - 14\"],[\"L\",\"100% - 32\",\"100% - 13\"],[\"L\",\"100% - 15\",\"36\"]]\r\n                }]`,\r\n              )}\r\n            />\r\n            <div className=\"flex items-center -mt-3.5\">\r\n              <FutureButton\r\n                shape=\"flat\"\r\n                className=\"font-normal px-9 py-[0.45rem] text-xs text-foreground\"\r\n              >\r\n                <div className=\"me-10\">Search Docsâ€¦</div>\r\n                <div className=\"ms-auto\">âŒ˜+k</div>\r\n              </FutureButton>\r\n              <a\r\n                target=\"_blank\"\r\n                href=\"https://github.com/afsar-dev/Nurui/stargazers\"\r\n              >\r\n                <FutureButton shape=\"flat\" className=\"py-[0.45rem] px-6 ms-1 \">\r\n                  <Github className=\"size-4\" />\r\n                </FutureButton>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"size-full relative -ml-[18px] hidden lg:block\">\r\n          <Frame\r\n            paths={JSON.parse(\r\n              `[{\r\n                \"show\":true,\r\n                \"style\":{\"strokeWidth\":\"1\",\"stroke\":\"${primaryStroke}E6\",\"fill\":\"rgba(79,70,229,0.08)\"},\r\n                \"path\":[[\"M\",\"12\",\"0\"],[\"L\",\"100% + 0\",\"0\"],[\"L\",\"100% + 0\",\"0% + 16\"],[\"L\",\"0\",\"100% - 42\"],[\"L\",\"18\",\"7\"],[\"L\",\"12\",\"0\"]]\r\n              },{\r\n                \"show\":true,\r\n                \"style\":{\"strokeWidth\":\"1\",\"stroke\":\"${primaryStroke}3B\",\"fill\":\"transparent\"},\r\n                \"path\":[[\"M\",\"3\",\"100% - 36\"],[\"L\",\"100% + 0\",\"20\"]]\r\n              }]`,\r\n            )}\r\n          />\r\n        </div>\r\n      </div>\r\n    </MobileMenuContext.Provider>\r\n  );\r\n}\r\n\r\nexport default FutureNavbar;\r\n",
      "type": "registry:component"
    },
    {
      "path": "./src/components/nurui/frame.tsx",
      "content": "import { useRef, useEffect } from \"react\";\r\nimport { twMerge } from \"tailwind-merge\";\r\nimport { type Paths, setupSvgRenderer } from \"@left4code/svg-renderer\";\r\n\r\nfunction Frame({\r\n  className,\r\n  paths,\r\n  enableBackdropBlur,\r\n  enableViewBox,\r\n  ...props\r\n}: {\r\n  paths: Paths;\r\n  enableBackdropBlur?: boolean;\r\n  enableViewBox?: boolean;\r\n} & React.ComponentProps<\"svg\">) {\r\n  const svgRef = useRef<SVGSVGElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (svgRef.current && svgRef.current.parentElement) {\r\n      const instance = setupSvgRenderer({\r\n        el: svgRef.current,\r\n        paths,\r\n        enableBackdropBlur,\r\n        enableViewBox,\r\n      });\r\n\r\n      return () => instance.destroy();\r\n    }\r\n  }, [paths, enableViewBox, enableBackdropBlur]);\r\n\r\n  return (\r\n    <svg\r\n      {...props}\r\n      className={twMerge([\"absolute inset-0 size-full\", className])}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      ref={svgRef}\r\n    />\r\n  );\r\n}\r\n\r\nexport { Frame };\r\n",
      "type": "registry:component"
    },
    {
      "path": "./src/components/nurui/future-button.tsx",
      "content": "import { Frame } from \"@/components/nurui/frame\";\r\nimport { twMerge } from \"tailwind-merge\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\n\r\n// ðŸŽ¨ Theme colors â€” no CSS variables, pure hex/rgba\r\nconst COLORS = {\r\n  default: {\r\n    stroke1: \"#4f46e5\",\r\n    fill1: \"rgba(79,70,229,0.22)\",\r\n    stroke2: \"#4f46e5\",\r\n    fill2: \"rgba(79,70,229,0.1)\",\r\n    text: \"#ffffff\",\r\n  },\r\n  accent: {\r\n    stroke1: \"#f97316\",\r\n    fill1: \"rgba(249,115,22,0.4)\",\r\n    stroke2: \"#f97316\",\r\n    fill2: \"rgba(249,115,22,0.2)\",\r\n    text: \"#ffffff\",\r\n  },\r\n  destructive: {\r\n    stroke1: \"#dc2626\",\r\n    fill1: \"rgba(220,38,38,0.22)\",\r\n    stroke2: \"#dc2626\",\r\n    fill2: \"rgba(220,38,38,0.1)\",\r\n    text: \"#ffffff\",\r\n  },\r\n  secondary: {\r\n    stroke1: \"#64748b\",\r\n    fill1: \"rgba(100,116,139,0.15)\",\r\n    stroke2: \"#64748b\",\r\n    fill2: \"rgba(100,116,139,0.1)\",\r\n    text: \"#ffffff\",\r\n  },\r\n  success: {\r\n    stroke1: \"#16a34a\",\r\n    fill1: \"rgba(22,163,74,0.22)\",\r\n    stroke2: \"#16a34a\",\r\n    fill2: \"rgba(22,163,74,0.1)\",\r\n    text: \"#ffffff\",\r\n  },\r\n};\r\n\r\nconst buttonVariants = cva(\r\n  \"group font-bold mb-2 relative px-8 py-2 cursor-pointer transition-all outline-none [&>span]:relative [&>span]:flex [&>span]:items-center [&>span]:justify-center\",\r\n  {\r\n    variants: {\r\n      shape: {\r\n        default: \"\",\r\n        flat: \"\",\r\n        simple: \"ps-8 pe-6\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      shape: \"default\",\r\n    },\r\n  },\r\n);\r\n\r\nfunction FutureButton({\r\n  className,\r\n  children,\r\n  shape = \"default\",\r\n  enableBackdropBlur = false,\r\n  enableViewBox = false,\r\n  customPaths,\r\n  textColor,\r\n  ...props\r\n}: React.ComponentProps<\"button\"> &\r\n  VariantProps<typeof buttonVariants> & {\r\n    customPaths?: string[];\r\n    enableBackdropBlur?: boolean;\r\n    enableViewBox?: boolean;\r\n    bgColor?: string;\r\n    textColor?: string;\r\n  }) {\r\n  const colors = COLORS.default;\r\n\r\n  return (\r\n    <button\r\n      {...props}\r\n      style={{\r\n        color: textColor || colors.text,\r\n      }}\r\n      className={twMerge(buttonVariants({ shape, className }))}\r\n    >\r\n      <div className=\"absolute inset-0 -mb-2\">\r\n        {!customPaths && (shape === \"default\" || shape === \"flat\") && (\r\n          <Frame\r\n            enableBackdropBlur={enableBackdropBlur}\r\n            enableViewBox={enableViewBox}\r\n            paths={[\r\n              {\r\n                show: true,\r\n                style: {\r\n                  strokeWidth: \"1\",\r\n                  stroke: colors.stroke1,\r\n                  fill: colors.fill1,\r\n                },\r\n                path: [\r\n                  [\"M\", \"17\", \"0\"],\r\n                  [\"L\", \"100% - 7\", \"0\"],\r\n                  [\"L\", \"100% + 0\", \"0% + 9.5\"],\r\n                  [\"L\", \"100% - 18\", \"100% - 6\"],\r\n                  [\"L\", \"4\", \"100% - 6\"],\r\n                  [\"L\", \"0\", \"100% - 15\"],\r\n                  [\"L\", \"17\", \"0\"],\r\n                ],\r\n              },\r\n              {\r\n                show: true,\r\n                style: {\r\n                  strokeWidth: \"1\",\r\n                  stroke: colors.stroke2,\r\n                  fill: colors.fill2,\r\n                },\r\n                path: [\r\n                  [\"M\", \"9\", \"100% - 6\"],\r\n                  [\"L\", \"100% - 22\", \"100% - 6\"],\r\n                  [\"L\", \"100% - 25\", \"100% + 0\"],\r\n                  [\"L\", \"12\", \"100% + 0\"],\r\n                  [\"L\", \"9\", \"100% - 6\"],\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        )}\r\n\r\n        {!customPaths && shape === \"simple\" && (\r\n          <Frame\r\n            enableBackdropBlur={enableBackdropBlur}\r\n            enableViewBox={enableViewBox}\r\n            paths={[\r\n              {\r\n                show: true,\r\n                style: {\r\n                  strokeWidth: \"1\",\r\n                  stroke: colors.stroke1,\r\n                  fill: colors.fill1,\r\n                },\r\n                path: [\r\n                  [\"M\", \"17\", \"0\"],\r\n                  [\"L\", \"100% - 0\", \"0\"],\r\n                  [\"L\", \"100% - 0\", \"100% - 6\"],\r\n                  [\"L\", \"0% + 3\", \"100% - 6\"],\r\n                  [\"L\", \"0% - 0\", \"100% - 16\"],\r\n                  [\"L\", \"17\", \"0\"],\r\n                ],\r\n              },\r\n              {\r\n                show: true,\r\n                style: {\r\n                  strokeWidth: \"1\",\r\n                  stroke: colors.stroke2,\r\n                  fill: colors.fill2,\r\n                },\r\n                path: [\r\n                  [\"M\", \"8\", \"100% - 6\"],\r\n                  [\"L\", \"100% - 5\", \"100% - 6\"],\r\n                  [\"L\", \"100% - 7\", \"100% - 0\"],\r\n                  [\"L\", \"10\", \"100% - 0\"],\r\n                  [\"L\", \"8\", \"100% - 6\"],\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        )}\r\n\r\n        {customPaths?.map((customPath, i) => (\r\n          <Frame key={i} paths={JSON.parse(customPath)} />\r\n        ))}\r\n      </div>\r\n      <span>{children}</span>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default FutureButton;\r\n",
      "type": "registry:component"
    }
  ]
}