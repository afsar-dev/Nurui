{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "code-cursor",
  "type": "registry:component",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "./src/components/nurui/code-cursor-demo.tsx",
      "content": "import React from \"react\";\nimport CodeCursor from \"@/components/nurui/code-cursor\";\n\nconst CodeCursorDemo = () => {\n  return (\n    <>\n      <p className=\"text-3xl text-center pt-4 text-[#3ca2fa] font-bold\">\n        Move cursor to see the effect.\n      </p>\n      <CodeCursor />\n    </>\n  );\n};\n\nexport default CodeCursorDemo;\n",
      "type": "registry:component"
    },
    {
      "path": "./src/components/nurui/code-cursor.tsx",
      "content": "\"use client\";\nimport React, { useEffect, useRef } from \"react\";\n\ninterface IBinaryChar {\n  x: number;\n  y: number;\n  alpha: number;\n  char: \"0\" | \"1\";\n  color: string;\n  update: () => void;\n  draw: () => void;\n}\n\nconst CodeCursor = () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const particles: IBinaryChar[] = [];\n\n  useEffect(() => {\n    const canvas = canvasRef.current!;\n    const ctx = canvas.getContext(\"2d\")!;\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    class BinaryChar {\n      x: number;\n      y: number;\n      alpha: number;\n      char: \"0\" | \"1\";\n      color: string;\n\n      constructor(x: number, y: number) {\n        this.x = x;\n        this.y = y;\n        this.alpha = 1;\n        this.char = Math.random() > 0.5 ? \"1\" : \"0\";\n\n        // Assign different colors for 0 and 1\n        this.color = this.char === \"0\" ? \"#00FFC6\" : \"#00B4FF\"; // mint and blue\n      }\n\n      update() {\n        this.y -= 0.5;\n        this.alpha -= 0.02;\n      }\n\n      draw() {\n        ctx.fillStyle = `${this.color}${Math.floor(this.alpha * 255)\n          .toString(16)\n          .padStart(2, \"0\")}`; // Apply fading alpha as hex\n        ctx.font = \"18px monospace\";\n        ctx.fillText(this.char, this.x, this.y);\n      }\n    }\n\n    const animate = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      particles.forEach((p, i) => {\n        p.update();\n        p.draw();\n        if (p.alpha <= 0) particles.splice(i, 1);\n      });\n      requestAnimationFrame(animate);\n    };\n\n    animate();\n\n    const onMove = (e: MouseEvent) => {\n      for (let i = 0; i < 2; i++) {\n        particles.push(new BinaryChar(e.clientX, e.clientY));\n      }\n    };\n\n    window.addEventListener(\"mousemove\", onMove);\n\n    return () => {\n      window.removeEventListener(\"mousemove\", onMove);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      className=\"fixed top-0 left-0 w-full h-full pointer-events-none z-50\"\n    />\n  );\n};\n\nexport default CodeCursor;\n",
      "type": "registry:component"
    }
  ]
}