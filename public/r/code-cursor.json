{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "code-cursor",
  "type": "registry:component",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "./src/components/nurui/code-cursor-demo.tsx",
      "content": "import React from \"react\";\r\nimport CodeCursor from \"@/components/nurui/code-cursor\";\r\n\r\nconst CodeCursorDemo = () => {\r\n  return (\r\n    <>\r\n      <p className=\"text-3xl text-center pt-4 text-[#3ca2fa] font-bold\">\r\n        Move cursor to see the effect.\r\n      </p>\r\n      <CodeCursor />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CodeCursorDemo;\r\n",
      "type": "registry:component"
    },
    {
      "path": "./src/components/nurui/code-cursor.tsx",
      "content": "\"use client\";\r\nimport React, { useEffect, useRef } from \"react\";\r\n\r\ninterface IBinaryChar {\r\n  x: number;\r\n  y: number;\r\n  alpha: number;\r\n  char: \"0\" | \"1\";\r\n  color: string;\r\n  update: () => void;\r\n  draw: () => void;\r\n}\r\n\r\nconst CodeCursor = () => {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const particles: IBinaryChar[] = [];\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current!;\r\n    const ctx = canvas.getContext(\"2d\")!;\r\n    canvas.width = window.innerWidth;\r\n    canvas.height = window.innerHeight;\r\n\r\n    class BinaryChar {\r\n      x: number;\r\n      y: number;\r\n      alpha: number;\r\n      char: \"0\" | \"1\";\r\n      color: string;\r\n\r\n      constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.alpha = 1;\r\n        this.char = Math.random() > 0.5 ? \"1\" : \"0\";\r\n\r\n        // Assign different colors for 0 and 1\r\n        this.color = this.char === \"0\" ? \"#00FFC6\" : \"#00B4FF\"; // mint and blue\r\n      }\r\n\r\n      update() {\r\n        this.y -= 0.5;\r\n        this.alpha -= 0.02;\r\n      }\r\n\r\n      draw() {\r\n        ctx.fillStyle = `${this.color}${Math.floor(this.alpha * 255)\r\n          .toString(16)\r\n          .padStart(2, \"0\")}`; // Apply fading alpha as hex\r\n        ctx.font = \"18px monospace\";\r\n        ctx.fillText(this.char, this.x, this.y);\r\n      }\r\n    }\r\n\r\n    const animate = () => {\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      particles.forEach((p, i) => {\r\n        p.update();\r\n        p.draw();\r\n        if (p.alpha <= 0) particles.splice(i, 1);\r\n      });\r\n      requestAnimationFrame(animate);\r\n    };\r\n\r\n    animate();\r\n\r\n    const onMove = (e: MouseEvent) => {\r\n      for (let i = 0; i < 2; i++) {\r\n        particles.push(new BinaryChar(e.clientX, e.clientY));\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"mousemove\", onMove);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"mousemove\", onMove);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      className=\"fixed top-0 left-0 w-full h-full pointer-events-none z-50\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default CodeCursor;\r\n",
      "type": "registry:component"
    }
  ]
}