{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "banner-close",
  "type": "registry:component",
  "dependencies": [
    "clsx",
    "tailwind-merge",
    "class-variance-authority",
    "@radix-ui/react-slot",
    "lucide-react"
  ],
  "devDependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "./src/components/nurui/banner-close-demo.tsx",
      "content": "import React from \"react\";\r\nimport { Banner } from \"@/components/nurui/banner\";\r\n\r\nconst BannerCloseDemo = () => {\r\n  return (\r\n    <div className=\"p-10 w-full\">\r\n      <Banner\r\n        id=\"banner-id\"\r\n        className=\"shadow-lg bg-white dark:bg-transparent\"\r\n        variant=\"rainbow\"\r\n      >\r\n        ðŸš€ Added 20+ modern animated UI components to enhance your projects.\r\n      </Banner>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BannerCloseDemo;\r\n",
      "type": "registry:component"
    },
    {
      "path": "./src/components/nurui/banner.tsx",
      "content": "\"use client\";\r\nimport { type HTMLAttributes, useEffect, useState } from \"react\";\r\nimport { X } from \"lucide-react\";\r\nimport { buttonVariants } from \"@/components/ui/button\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\ntype BannerVariant = \"rainbow\" | \"normal\";\r\n\r\nexport function Banner({\r\n  id,\r\n  xColor,\r\n  variant = \"normal\",\r\n  changeLayout = true,\r\n  height = \"3rem\",\r\n  rainbowColors = [\r\n    \"rgba(0,149,255,0.56)\",\r\n    \"rgba(231,77,255,0.77)\",\r\n    \"rgba(255,0,0,0.73)\",\r\n    \"rgba(131,255,166,0.66)\",\r\n  ],\r\n  ...props\r\n}: HTMLAttributes<HTMLDivElement> & {\r\n  /**\r\n   * @defaultValue 3rem\r\n   */\r\n  height?: string;\r\n\r\n  xColor?: string;\r\n\r\n  /**\r\n   * @defaultValue 'normal'\r\n   */\r\n  variant?: BannerVariant;\r\n\r\n  /**\r\n   * For rainbow variant only, customise the colors\r\n   */\r\n  rainbowColors?: string[];\r\n\r\n  /**\r\n   * Change Fumadocs layout styles\r\n   *\r\n   * @defaultValue true\r\n   */\r\n  changeLayout?: boolean;\r\n}) {\r\n  const [open, setOpen] = useState(true);\r\n  const globalKey = id ? `nd-banner-${id}` : null;\r\n\r\n  useEffect(() => {\r\n    if (globalKey) setOpen(localStorage.getItem(globalKey) !== \"true\");\r\n  }, [globalKey]);\r\n\r\n  if (!open) return null;\r\n\r\n  return (\r\n    <div\r\n      id={id}\r\n      {...props}\r\n      className={cn(\r\n        \"sticky top-0 z-40 flex flex-row items-center justify-center px-4 text-center text-sm font-medium\",\r\n        variant === \"normal\" && \"bg-fd-secondary\",\r\n        variant === \"rainbow\" && \"bg-fd-background\",\r\n        !open && \"hidden\",\r\n        props.className,\r\n      )}\r\n      style={{\r\n        height,\r\n      }}\r\n    >\r\n      {changeLayout && open ? (\r\n        <style>\r\n          {globalKey\r\n            ? `:root:not(.${globalKey}) { --fd-banner-height: ${height}; }`\r\n            : `:root { --fd-banner-height: ${height}; }`}\r\n        </style>\r\n      ) : null}\r\n      {globalKey ? (\r\n        <style>{`.${globalKey} #${id} { display: none; }`}</style>\r\n      ) : null}\r\n      {globalKey ? (\r\n        <script\r\n          dangerouslySetInnerHTML={{\r\n            __html: `if (localStorage.getItem('${globalKey}') === 'true') document.documentElement.classList.add('${globalKey}');`,\r\n          }}\r\n        />\r\n      ) : null}\r\n\r\n      {variant === \"rainbow\"\r\n        ? flow({\r\n            colors: rainbowColors,\r\n          })\r\n        : null}\r\n      {props.children}\r\n      {id ? (\r\n        <button\r\n          type=\"button\"\r\n          aria-label=\"Close Banner\"\r\n          onClick={() => {\r\n            setOpen(false);\r\n            if (globalKey) {\r\n              localStorage.setItem(globalKey, \"true\");\r\n              window.dispatchEvent(new Event(\"banner-status-changed\"));\r\n            }\r\n          }}\r\n          className={cn(\r\n            buttonVariants({\r\n              variant: \"ghost\",\r\n              className:\r\n                \"absolute end-2 md:end-20 top-1/2 -translate-y-1/2 text-fd-muted-foreground/50\",\r\n              size: \"icon\",\r\n            }),\r\n          )}\r\n        >\r\n          <X color={xColor} />\r\n        </button>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst maskImage =\r\n  \"linear-gradient(to bottom,white,transparent), radial-gradient(circle at top center, white, transparent)\";\r\n\r\nfunction flow({ colors }: { colors: string[] }) {\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"absolute inset-0 z-[-1]\"\r\n        style={\r\n          {\r\n            maskImage,\r\n            maskComposite: \"intersect\",\r\n            animation: \"fd-moving-banner 20s linear infinite\",\r\n            backgroundImage: `repeating-linear-gradient(70deg, ${[...colors, colors[0]].map((color, i) => `${color} ${(i * 50) / colors.length}%`).join(\", \")})`,\r\n            backgroundSize: \"200% 100%\",\r\n            filter: \"saturate(2)\",\r\n          } as object\r\n        }\r\n      />\r\n      <style>\r\n        {`@keyframes fd-moving-banner {\r\n            from { background-position: 0% 0;  }\r\n            to { background-position: 100% 0;  }\r\n         }`}\r\n      </style>\r\n    </>\r\n  );\r\n}\r\n",
      "type": "registry:component"
    }
  ]
}