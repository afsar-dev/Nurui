{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "gradient-background",
  "type": "registry:component",
  "dependencies": [
    "clsx",
    "tailwind-merge"
  ],
  "devDependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "./src/components/nurui/gradient-background-demo.tsx",
      "content": "import React from \"react\";\r\nimport { GradientBackground } from \"@/components/nurui/gradient-background\";\r\n\r\nconst GradientBackgroundDemo = () => {\r\n  return (\r\n    <div className=\"bg-background relative flex h-[650px] w-full flex-col items-center justify-center overflow-hidden rounded-xl\">\r\n      <p className=\"z-10 absolute text-center text-3xl font-semibold tracking-tighter whitespace-pre-wrap text-black md:text-7xl dark:text-white\">\r\n        Background\r\n      </p>\r\n      <GradientBackground />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GradientBackgroundDemo;\r\n",
      "type": "registry:component"
    },
    {
      "path": "./src/components/nurui/gradient-background.tsx",
      "content": "\"use client\";\r\n\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { useTheme } from \"next-themes\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nexport const GradientBackground = ({\r\n  firstColor = \"60, 162, 250\",\r\n  secondColor = \"60, 162, 250\",\r\n  thirdColor = \"60, 162, 250\",\r\n  fourthColor = \"60, 162, 250\",\r\n  fifthColor = \"60, 162, 250\",\r\n  pointerColor = \"60, 162, 250\",\r\n  size = \"50%\",\r\n  blendingValue = \"hard-light\",\r\n  children,\r\n  className,\r\n  interactive = true,\r\n  containerClassName,\r\n}: {\r\n  gradientBackgroundStart?: string;\r\n  gradientBackgroundEnd?: string;\r\n  firstColor?: string;\r\n  secondColor?: string;\r\n  thirdColor?: string;\r\n  fourthColor?: string;\r\n  fifthColor?: string;\r\n  pointerColor?: string;\r\n  size?: string;\r\n  blendingValue?: string;\r\n  children?: React.ReactNode;\r\n  className?: string;\r\n  interactive?: boolean;\r\n  containerClassName?: string;\r\n}) => {\r\n  const interactiveRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Use refs to store animation values instead of state\r\n  const curXRef = useRef(0);\r\n  const curYRef = useRef(0);\r\n  const tgXRef = useRef(0);\r\n  const tgYRef = useRef(0);\r\n  const animationFrameRef = useRef<number | null>(null);\r\n\r\n  const [isSafari, setIsSafari] = useState(false);\r\n\r\n  const { theme } = useTheme();\r\n\r\n  // Set up gradient background colors based on theme\r\n  const gradientBackgroundStart = theme === \"dark\" ? \"#01031333\" : \"#ffffff\";\r\n  const gradientBackgroundEnd = theme === \"dark\" ? \"#01031333\" : \"#ffffff\";\r\n\r\n  // Set up CSS variables\r\n  useEffect(() => {\r\n    document.body.style.setProperty(\r\n      \"--gradient-background-start\",\r\n      gradientBackgroundStart,\r\n    );\r\n    document.body.style.setProperty(\r\n      \"--gradient-background-end\",\r\n      gradientBackgroundEnd,\r\n    );\r\n    document.body.style.setProperty(\"--first-color\", firstColor);\r\n    document.body.style.setProperty(\"--second-color\", secondColor);\r\n    document.body.style.setProperty(\"--third-color\", thirdColor);\r\n    document.body.style.setProperty(\"--fourth-color\", fourthColor);\r\n    document.body.style.setProperty(\"--fifth-color\", fifthColor);\r\n    document.body.style.setProperty(\"--pointer-color\", pointerColor);\r\n    document.body.style.setProperty(\"--size\", size);\r\n    document.body.style.setProperty(\"--blending-value\", blendingValue);\r\n  }, [\r\n    gradientBackgroundStart,\r\n    gradientBackgroundEnd,\r\n    firstColor,\r\n    secondColor,\r\n    thirdColor,\r\n    fourthColor,\r\n    fifthColor,\r\n    pointerColor,\r\n    size,\r\n    blendingValue,\r\n  ]);\r\n\r\n  // Set up Safari detection\r\n  useEffect(() => {\r\n    setIsSafari(/^((?!chrome|android).)*safari/i.test(navigator.userAgent));\r\n  }, []);\r\n\r\n  // Set up animation loop\r\n  useEffect(() => {\r\n    if (!interactive) return;\r\n\r\n    function animateMovement() {\r\n      if (!interactiveRef.current) {\r\n        animationFrameRef.current = requestAnimationFrame(animateMovement);\r\n        return;\r\n      }\r\n\r\n      // Calculate new position with easing\r\n      curXRef.current =\r\n        curXRef.current + (tgXRef.current - curXRef.current) / 20;\r\n      curYRef.current =\r\n        curYRef.current + (tgYRef.current - curYRef.current) / 20;\r\n\r\n      // Apply transform directly to DOM element\r\n      interactiveRef.current.style.transform = `translate(${Math.round(curXRef.current)}px, ${Math.round(curYRef.current)}px)`;\r\n\r\n      // Continue animation loop\r\n      animationFrameRef.current = requestAnimationFrame(animateMovement);\r\n    }\r\n\r\n    // Start animation loop\r\n    animationFrameRef.current = requestAnimationFrame(animateMovement);\r\n\r\n    // Clean up animation loop on unmount\r\n    return () => {\r\n      if (animationFrameRef.current !== null) {\r\n        cancelAnimationFrame(animationFrameRef.current);\r\n      }\r\n    };\r\n  }, [interactive]);\r\n\r\n  // Handle mouse movement\r\n  const handleMouseMove = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    if (!interactiveRef.current) return;\r\n\r\n    const rect = interactiveRef.current.getBoundingClientRect();\r\n    // Update target position directly in ref (no state update)\r\n    tgXRef.current = event.clientX - rect.left;\r\n    tgYRef.current = event.clientY - rect.top;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={cn(\r\n        \"relative top-0 left-0 h-screen w-screen overflow-hidden bg-[linear-gradient(40deg,var(--gradient-background-start),var(--gradient-background-end))]\",\r\n        containerClassName,\r\n      )}\r\n    >\r\n      <svg className=\"hidden\">\r\n        <defs>\r\n          <filter id=\"blurMe\">\r\n            <feGaussianBlur\r\n              in=\"SourceGraphic\"\r\n              stdDeviation=\"10\"\r\n              result=\"blur\"\r\n            />\r\n            <feColorMatrix\r\n              in=\"blur\"\r\n              mode=\"matrix\"\r\n              values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -8\"\r\n              result=\"goo\"\r\n            />\r\n            <feBlend in=\"SourceGraphic\" in2=\"goo\" />\r\n          </filter>\r\n        </defs>\r\n      </svg>\r\n      <div className={cn(className)}>{children}</div>\r\n      <div\r\n        className={cn(\r\n          \"gradients-container h-full w-full blur-lg\",\r\n          isSafari ? \"blur-2xl\" : \"[filter:url(#blurMe)_blur(40px)]\",\r\n        )}\r\n      >\r\n        <div\r\n          className={cn(\r\n            `absolute [background:radial-gradient(circle_at_center,_var(--first-color)_0,_var(--first-color)_50%)_no-repeat]`,\r\n            `top-[calc(50%-var(--size)/2)] left-[calc(50%-var(--size)/2)] h-[var(--size)] w-[var(--size)] [mix-blend-mode:var(--blending-value)]`,\r\n            `[transform-origin:center_center]`,\r\n            `animate-first`,\r\n            `opacity-100`,\r\n          )}\r\n        ></div>\r\n        <div\r\n          className={cn(\r\n            `absolute [background:radial-gradient(circle_at_center,_rgba(var(--second-color),_0.8)_0,_rgba(var(--second-color),_0)_50%)_no-repeat]`,\r\n            `top-[calc(50%-var(--size)/2)] left-[calc(50%-var(--size)/2)] h-[var(--size)] w-[var(--size)] [mix-blend-mode:var(--blending-value)]`,\r\n            `[transform-origin:calc(50%-400px)]`,\r\n            `animate-second`,\r\n            `opacity-100`,\r\n          )}\r\n        ></div>\r\n        <div\r\n          className={cn(\r\n            `absolute [background:radial-gradient(circle_at_center,_rgba(var(--third-color),_0.8)_0,_rgba(var(--third-color),_0)_50%)_no-repeat]`,\r\n            `top-[calc(50%-var(--size)/2)] left-[calc(50%-var(--size)/2)] h-[var(--size)] w-[var(--size)] [mix-blend-mode:var(--blending-value)]`,\r\n            `[transform-origin:calc(50%+400px)]`,\r\n            `animate-third`,\r\n            `opacity-100`,\r\n          )}\r\n        ></div>\r\n        <div\r\n          className={cn(\r\n            `absolute [background:radial-gradient(circle_at_center,_rgba(var(--fourth-color),_0.8)_0,_rgba(var(--fourth-color),_0)_50%)_no-repeat]`,\r\n            `top-[calc(50%-var(--size)/2)] left-[calc(50%-var(--size)/2)] h-[var(--size)] w-[var(--size)] [mix-blend-mode:var(--blending-value)]`,\r\n            `[transform-origin:calc(50%-200px)]`,\r\n            `animate-fourth`,\r\n            `opacity-70`,\r\n          )}\r\n        ></div>\r\n        <div\r\n          className={cn(\r\n            `absolute [background:radial-gradient(circle_at_center,_rgba(var(--fifth-color),_0.8)_0,_rgba(var(--fifth-color),_0)_50%)_no-repeat]`,\r\n            `top-[calc(50%-var(--size)/2)] left-[calc(50%-var(--size)/2)] h-[var(--size)] w-[var(--size)] [mix-blend-mode:var(--blending-value)]`,\r\n            `[transform-origin:calc(50%-800px)_calc(50%+800px)]`,\r\n            `animate-fifth`,\r\n            `opacity-100`,\r\n          )}\r\n        ></div>\r\n\r\n        {interactive && (\r\n          <div\r\n            ref={interactiveRef}\r\n            onMouseMove={handleMouseMove}\r\n            className={cn(\r\n              `absolute [background:radial-gradient(circle_at_center,_rgba(var(--pointer-color),_0.8)_0,_rgba(var(--pointer-color),_0)_50%)_no-repeat]`,\r\n              `-top-1/2 -left-1/2 h-full w-full [mix-blend-mode:var(--blending-value)]`,\r\n              `opacity-70`,\r\n            )}\r\n          ></div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n",
      "type": "registry:component"
    }
  ]
}