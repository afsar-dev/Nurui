{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "video-modal",
  "type": "registry:component",
  "dependencies": [
    "motion",
    "clsx",
    "tailwind-merge",
    "lucide-react"
  ],
  "devDependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "./src/components/nurui/video-modal-demo.tsx",
      "content": "import { VideoModal } from \"@/components/nurui/video-modal\";\n\nconst VideoModalDemo = () => {\n  return (\n    <section className=\"relative max-w-5xl mx-[1.1rem] md:mx-[1.3rem] lg:mx-[1.5rem] xl:mx-auto py-14\">\n      <VideoModal\n        className=\"block dark:hidden\"\n        animationStyle=\"from-center\"\n        videoSrc=\"https://www.youtube.com/embed/p83vl3zE-AU?si=dWQsgqrI4apbeo1L\"\n        thumbnailSrc=\"/og-image.png\"\n        thumbnailAlt=\"Hero Video\"\n      />\n      <VideoModal\n        className=\"hidden dark:block\"\n        animationStyle=\"from-center\"\n        videoSrc=\"https://www.youtube.com/embed/p83vl3zE-AU?si=dWQsgqrI4apbeo1L\"\n        thumbnailSrc=\"/og-image.png\"\n        thumbnailAlt=\"Hero Video\"\n      />\n    </section>\n  );\n};\n\nexport default VideoModalDemo;\n",
      "type": "registry:component"
    },
    {
      "path": "./src/components/nurui/video-modal.tsx",
      "content": "\"use client\";\n\nimport { useState } from \"react\";\nimport { AnimatePresence, motion } from \"motion/react\";\nimport { Play, XIcon } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\nimport Image from \"next/image\";\n\ntype AnimationStyle =\n  | \"from-bottom\"\n  | \"from-center\"\n  | \"from-top\"\n  | \"from-left\"\n  | \"from-right\"\n  | \"fade\"\n  | \"top-in-bottom-out\"\n  | \"left-in-right-out\";\n\ninterface HeroVideoProps {\n  animationStyle?: AnimationStyle;\n  videoSrc: string;\n  thumbnailSrc: string;\n  thumbnailAlt?: string;\n  className?: string;\n}\n\nconst animationVariants = {\n  \"from-bottom\": {\n    initial: { y: \"100%\", opacity: 0 },\n    animate: { y: 0, opacity: 1 },\n    exit: { y: \"100%\", opacity: 0 },\n  },\n  \"from-center\": {\n    initial: { scale: 0.5, opacity: 0 },\n    animate: { scale: 1, opacity: 1 },\n    exit: { scale: 0.5, opacity: 0 },\n  },\n  \"from-top\": {\n    initial: { y: \"-100%\", opacity: 0 },\n    animate: { y: 0, opacity: 1 },\n    exit: { y: \"-100%\", opacity: 0 },\n  },\n  \"from-left\": {\n    initial: { x: \"-100%\", opacity: 0 },\n    animate: { x: 0, opacity: 1 },\n    exit: { x: \"-100%\", opacity: 0 },\n  },\n  \"from-right\": {\n    initial: { x: \"100%\", opacity: 0 },\n    animate: { x: 0, opacity: 1 },\n    exit: { x: \"100%\", opacity: 0 },\n  },\n  fade: {\n    initial: { opacity: 0 },\n    animate: { opacity: 1 },\n    exit: { opacity: 0 },\n  },\n  \"top-in-bottom-out\": {\n    initial: { y: \"-100%\", opacity: 0 },\n    animate: { y: 0, opacity: 1 },\n    exit: { y: \"100%\", opacity: 0 },\n  },\n  \"left-in-right-out\": {\n    initial: { x: \"-100%\", opacity: 0 },\n    animate: { x: 0, opacity: 1 },\n    exit: { x: \"100%\", opacity: 0 },\n  },\n};\n\nexport function VideoModal({\n  animationStyle = \"from-center\",\n  videoSrc,\n  thumbnailSrc,\n  thumbnailAlt = \"Video thumbnail\",\n  className,\n}: HeroVideoProps) {\n  const [isVideoOpen, setIsVideoOpen] = useState(false);\n  const selectedAnimation = animationVariants[animationStyle];\n\n  return (\n    <div className={cn(\"relative\", className)}>\n      <div\n        className=\"group relative cursor-pointer\"\n        onClick={() => setIsVideoOpen(true)}\n      >\n        <Image\n          src={thumbnailSrc}\n          alt={thumbnailAlt}\n          className=\"w-full h-full rounded-2xl border-2 border-[var(--primary-color)] shadow-lg transition-all duration-200 ease-out group-hover:brightness-[0.8]\"\n          height={0}\n          width={0}\n          unoptimized\n        />\n        <div className=\"absolute inset-0 flex scale-[0.9] items-center justify-center rounded-2xl transition-all duration-200 ease-out group-hover:scale-100\">\n          <div className=\"flex size-28 items-center justify-center rounded-full bg-[var(--primary-color-2)] backdrop-blur-md\">\n            <div\n              className={`relative flex size-20 scale-100 items-center justify-center rounded-full bg-[var(--primary-color)] shadow-md transition-all duration-200 ease-out group-hover:scale-[1.2]`}\n            >\n              <Play\n                className=\"size-8 scale-100 fill-[var(--white-color)] text-[var(--white-color)] transition-transform duration-200 ease-out group-hover:scale-105\"\n                style={{\n                  filter:\n                    \"drop-shadow(0 4px 3px rgb(0 0 0 / 0.07)) drop-shadow(0 2px 2px rgb(0 0 0 / 0.06))\",\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <AnimatePresence>\n        {isVideoOpen && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            onClick={() => setIsVideoOpen(false)}\n            exit={{ opacity: 0 }}\n            className=\"fixed inset-0 z-[999] flex items-center justify-center bg-black/50 backdrop-blur-md\"\n          >\n            <motion.div\n              {...selectedAnimation}\n              transition={{ type: \"spring\", damping: 30, stiffness: 300 }}\n              className=\"relative mx-4 aspect-video w-full max-w-4xl md:mx-0\"\n            >\n              <motion.button className=\"absolute -top-16 right-0 rounded-full bg-[var(--primary-color)] p-2 text-xl text-[var(--white-color)] ring-1 backdrop-blur-md\">\n                <XIcon className=\"size-5\" />\n              </motion.button>\n              <div className=\"relative isolate z-[1] size-full overflow-hidden rounded-2xl border-2 border-[var(--primary-color)]\">\n                <iframe\n                  src={videoSrc}\n                  className=\"size-full rounded-2xl\"\n                  allowFullScreen\n                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\n                ></iframe>\n              </div>\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n}\n",
      "type": "registry:component"
    }
  ]
}